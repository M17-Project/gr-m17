<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.13.0"/>
    <errors>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_encr_type&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 95. Dynamic binding is not used." verbose="Virtual function &apos;set_encr_type&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 95. Dynamic binding is not used." file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.h" line="282" column="12" info="set_encr_type is a virtual function"/>
            <location file="../../../lib/m17_coder_impl.cc" line="95" column="7" info="Calling set_encr_type"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_type&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 96. Dynamic binding is not used." verbose="Virtual function &apos;set_type&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 96. Dynamic binding is not used." file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.h" line="278" column="12" info="set_type is a virtual function"/>
            <location file="../../../lib/m17_coder_impl.cc" line="96" column="7" info="Calling set_type"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_aes_subtype&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 97. Dynamic binding is not used." verbose="Virtual function &apos;set_aes_subtype&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 97. Dynamic binding is not used." file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.h" line="284" column="12" info="set_aes_subtype is a virtual function"/>
            <location file="../../../lib/m17_coder_impl.cc" line="97" column="7" info="Calling set_aes_subtype"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_meta&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 98. Dynamic binding is not used." verbose="Virtual function &apos;set_meta&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 98. Dynamic binding is not used." file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.h" line="276" column="12" info="set_meta is a virtual function"/>
            <location file="../../../lib/m17_coder_impl.cc" line="98" column="7" info="Calling set_meta"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_seed&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 99. Dynamic binding is not used." verbose="Virtual function &apos;set_seed&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 99. Dynamic binding is not used." file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.h" line="277" column="12" info="set_seed is a virtual function"/>
            <location file="../../../lib/m17_coder_impl.cc" line="99" column="7" info="Calling set_seed"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_src_id&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 100. Dynamic binding is not used." verbose="Virtual function &apos;set_src_id&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 100. Dynamic binding is not used." file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.h" line="272" column="12" info="set_src_id is a virtual function"/>
            <location file="../../../lib/m17_coder_impl.cc" line="100" column="7" info="Calling set_src_id"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_dst_id&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 101. Dynamic binding is not used." verbose="Virtual function &apos;set_dst_id&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 101. Dynamic binding is not used." file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.h" line="273" column="12" info="set_dst_id is a virtual function"/>
            <location file="../../../lib/m17_coder_impl.cc" line="101" column="7" info="Calling set_dst_id"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_signed&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 102. Dynamic binding is not used." verbose="Virtual function &apos;set_signed&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 102. Dynamic binding is not used." file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.h" line="287" column="12" info="set_signed is a virtual function"/>
            <location file="../../../lib/m17_coder_impl.cc" line="102" column="7" info="Calling set_signed"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_debug&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 103. Dynamic binding is not used." verbose="Virtual function &apos;set_debug&apos; is called from constructor &apos;m17_coder_impl(std::string src_id,std::string dst_id,int mode,int data,int encr_type,int encr_subtype,int aes_subtype,int can,std::string meta,std::string key,std::string priv_key,bool debug,bool signed_str,std::string seed)&apos; at line 103. Dynamic binding is not used." file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.h" line="286" column="12" info="set_debug is a virtual function"/>
            <location file="../../../lib/m17_coder_impl.cc" line="103" column="7" info="Calling set_debug"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="155" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="158" column="42"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="762" column="25"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="763" column="20"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;set_priv_key&apos; argument 1 names different: declaration &apos;key&apos; definition &apos;arg&apos;." verbose="Function &apos;set_priv_key&apos; argument 1 names different: declaration &apos;key&apos; definition &apos;arg&apos;." cwe="628" inconclusive="true" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="356" column="51"/>
            <location file="../../../lib/m17_coder_impl.h" line="275" column="38"/>
            <symbol>set_priv_key</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;set_key&apos; argument 1 names different: declaration &apos;key&apos; definition &apos;arg&apos;." verbose="Function &apos;set_key&apos; argument 1 names different: declaration &apos;key&apos; definition &apos;arg&apos;." cwe="628" inconclusive="true" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="395" column="46"/>
            <location file="../../../lib/m17_coder_impl.h" line="274" column="33"/>
            <symbol>set_key</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;set_seed&apos; argument 1 names different: declaration &apos;meta&apos; definition &apos;arg&apos;." verbose="Function &apos;set_seed&apos; argument 1 names different: declaration &apos;meta&apos; definition &apos;arg&apos;." cwe="628" inconclusive="true" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="431" column="47"/>
            <location file="../../../lib/m17_coder_impl.h" line="277" column="34"/>
            <symbol>set_seed</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;src_id&apos; should be passed by const reference." verbose="Parameter &apos;src_id&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="74" column="33" info="Function parameter &apos;src_id&apos; should be passed by const reference."/>
            <symbol>src_id</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;dst_id&apos; should be passed by const reference." verbose="Parameter &apos;dst_id&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="74" column="53" info="Function parameter &apos;dst_id&apos; should be passed by const reference."/>
            <symbol>dst_id</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;meta&apos; should be passed by const reference." verbose="Parameter &apos;meta&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="76" column="33" info="Function parameter &apos;meta&apos; should be passed by const reference."/>
            <symbol>meta</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;key&apos; should be passed by const reference." verbose="Parameter &apos;key&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="76" column="51" info="Function parameter &apos;key&apos; should be passed by const reference."/>
            <symbol>key</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;priv_key&apos; should be passed by const reference." verbose="Parameter &apos;priv_key&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="77" column="33" info="Function parameter &apos;priv_key&apos; should be passed by const reference."/>
            <symbol>priv_key</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;seed&apos; should be passed by const reference." verbose="Parameter &apos;seed&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="77" column="84" info="Function parameter &apos;seed&apos; should be passed by const reference."/>
            <symbol>seed</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;src_id&apos; should be passed by const reference." verbose="Parameter &apos;src_id&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="86" column="48" info="Function parameter &apos;src_id&apos; should be passed by const reference."/>
            <symbol>src_id</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;dst_id&apos; should be passed by const reference." verbose="Parameter &apos;dst_id&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="86" column="68" info="Function parameter &apos;dst_id&apos; should be passed by const reference."/>
            <symbol>dst_id</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;key&apos; should be passed by const reference." verbose="Parameter &apos;key&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="89" column="66" info="Function parameter &apos;key&apos; should be passed by const reference."/>
            <symbol>key</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;priv_key&apos; should be passed by const reference." verbose="Parameter &apos;priv_key&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="90" column="48" info="Function parameter &apos;priv_key&apos; should be passed by const reference."/>
            <symbol>priv_key</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;seed&apos; should be passed by const reference." verbose="Parameter &apos;seed&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="91" column="65" info="Function parameter &apos;seed&apos; should be passed by const reference."/>
            <symbol>seed</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;ninput_items&apos; can be declared as reference to const" verbose="Parameter &apos;ninput_items&apos; can be declared as reference to const" cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="758" column="49" info="Parameter &apos;ninput_items&apos; can be declared as reference to const"/>
            <symbol>ninput_items</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;input_items&apos; can be declared as reference to const" verbose="Parameter &apos;input_items&apos; can be declared as reference to const" cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="759" column="61" info="Parameter &apos;input_items&apos; can be declared as reference to const"/>
            <symbol>input_items</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;output_items&apos; can be declared as reference to const" verbose="Parameter &apos;output_items&apos; can be declared as reference to const" cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="760" column="55" info="Parameter &apos;output_items&apos; can be declared as reference to const"/>
            <symbol>output_items</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;hex_byte&apos; can be declared as const array" verbose="Variable &apos;hex_byte&apos; can be declared as const array" cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="373" column="14" info="Variable &apos;hex_byte&apos; can be declared as const array"/>
            <symbol>hex_byte</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;hex_byte&apos; can be declared as const array" verbose="Variable &apos;hex_byte&apos; can be declared as const array" cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="412" column="14" info="Variable &apos;hex_byte&apos; can be declared as const array"/>
            <symbol>hex_byte</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;hex_byte&apos; can be declared as const array" verbose="Variable &apos;hex_byte&apos; can be declared as const array" cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="443" column="14" info="Variable &apos;hex_byte&apos; can be declared as const array"/>
            <symbol>hex_byte</symbol>
        </error>
        <error id="uselessCallsSubstr" severity="performance" msg="Ineffective call of function &apos;substr&apos; because a prefix of the string is assigned to itself. Use resize() or pop_back() instead." verbose="Ineffective call of function &apos;substr&apos; because a prefix of the string is assigned to itself. Use resize() or pop_back() instead." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="478" column="18"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="295" column="38"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="../../../lib/m17_coder_impl.cc">
            <location file="../../../lib/m17_coder_impl.cc" line="331" column="38"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_debug_data&apos; is called from constructor &apos;m17_decoder_impl()&apos; at line 253. Dynamic binding is not used." verbose="Virtual function &apos;set_debug_data&apos; is called from constructor &apos;m17_decoder_impl()&apos; at line 253. Dynamic binding is not used." file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.h" line="292" column="12" info="set_debug_data is a virtual function"/>
            <location file="../../../lib/m17_decoder_impl.cc" line="62" column="4" info="Calling set_debug_data"/>
            <location file="../../../lib/m17_decoder_impl.h" line="253" column="29" info="Calling m17_decoder_impl"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_debug_data&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 62. Dynamic binding is not used." verbose="Virtual function &apos;set_debug_data&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 62. Dynamic binding is not used." file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.h" line="292" column="12" info="set_debug_data is a virtual function"/>
            <location file="../../../lib/m17_decoder_impl.cc" line="62" column="4" info="Calling set_debug_data"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_debug_ctrl&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 63. Dynamic binding is not used." verbose="Virtual function &apos;set_debug_ctrl&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 63. Dynamic binding is not used." file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.h" line="295" column="12" info="set_debug_ctrl is a virtual function"/>
            <location file="../../../lib/m17_decoder_impl.cc" line="63" column="4" info="Calling set_debug_ctrl"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_threshold&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 64. Dynamic binding is not used." verbose="Virtual function &apos;set_threshold&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 64. Dynamic binding is not used." file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.h" line="297" column="12" info="set_threshold is a virtual function"/>
            <location file="../../../lib/m17_decoder_impl.cc" line="64" column="4" info="Calling set_threshold"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_callsign&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 65. Dynamic binding is not used." verbose="Virtual function &apos;set_callsign&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 65. Dynamic binding is not used." file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.h" line="296" column="12" info="set_callsign is a virtual function"/>
            <location file="../../../lib/m17_decoder_impl.cc" line="65" column="4" info="Calling set_callsign"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_signed&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 66. Dynamic binding is not used." verbose="Virtual function &apos;set_signed&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 66. Dynamic binding is not used." file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.h" line="298" column="12" info="set_signed is a virtual function"/>
            <location file="../../../lib/m17_decoder_impl.cc" line="66" column="4" info="Calling set_signed"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_key&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 67. Dynamic binding is not used." verbose="Virtual function &apos;set_key&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 67. Dynamic binding is not used." file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.h" line="293" column="12" info="set_key is a virtual function"/>
            <location file="../../../lib/m17_decoder_impl.cc" line="67" column="4" info="Calling set_key"/>
        </error>
        <error id="virtualCallInConstructor" severity="style" msg="Virtual function &apos;set_encr_type&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 68. Dynamic binding is not used." verbose="Virtual function &apos;set_encr_type&apos; is called from constructor &apos;m17_decoder_impl(bool debug_data,bool debug_ctrl,float threshold,bool callsign,bool signed_str,int encr_type,std::string key,std::string seed)&apos; at line 68. Dynamic binding is not used." file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.h" line="299" column="12" info="set_encr_type is a virtual function"/>
            <location file="../../../lib/m17_decoder_impl.cc" line="68" column="4" info="Calling set_encr_type"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="639" column="25" info="Second condition"/>
            <location file="../../../lib/m17_decoder_impl.cc" line="602" column="25" info="First condition"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="401" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="402" column="16"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="559" column="15"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="570" column="64"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="571" column="64"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="593" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="597" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="643" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="645" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="717" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="723" column="27"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="782" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="788" column="21"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;set_seed&apos; argument 1 names different: declaration &apos;seed&apos; definition &apos;arg&apos;." verbose="Function &apos;set_seed&apos; argument 1 names different: declaration &apos;seed&apos; definition &apos;arg&apos;." cwe="628" inconclusive="true" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="173" column="47"/>
            <location file="../../../lib/m17_decoder_impl.h" line="294" column="34"/>
            <symbol>set_seed</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;key&apos; should be passed by const reference." verbose="Parameter &apos;key&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="44" column="21" info="Function parameter &apos;key&apos; should be passed by const reference."/>
            <symbol>key</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;seed&apos; should be passed by const reference." verbose="Parameter &apos;seed&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="44" column="38" info="Function parameter &apos;seed&apos; should be passed by const reference."/>
            <symbol>seed</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;key&apos; should be passed by const reference." verbose="Parameter &apos;key&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="56" column="26" info="Function parameter &apos;key&apos; should be passed by const reference."/>
            <symbol>key</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;seed&apos; should be passed by const reference." verbose="Parameter &apos;seed&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="56" column="43" info="Function parameter &apos;seed&apos; should be passed by const reference."/>
            <symbol>seed</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;input_items&apos; can be declared as reference to const" verbose="Parameter &apos;input_items&apos; can be declared as reference to const" cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="398" column="40" info="Parameter &apos;input_items&apos; can be declared as reference to const"/>
            <symbol>input_items</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;output_items&apos; can be declared as reference to const" verbose="Parameter &apos;output_items&apos; can be declared as reference to const" cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="399" column="34" info="Parameter &apos;output_items&apos; can be declared as reference to const"/>
            <symbol>output_items</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;hex_byte&apos; can be declared as const array" verbose="Variable &apos;hex_byte&apos; can be declared as const array" cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="162" column="10" info="Variable &apos;hex_byte&apos; can be declared as const array"/>
            <symbol>hex_byte</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;hex_byte&apos; can be declared as const array" verbose="Variable &apos;hex_byte&apos; can be declared as const array" cwe="398" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="188" column="10" info="Variable &apos;hex_byte&apos; can be declared as const array"/>
            <symbol>hex_byte</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;bit&apos; is assigned a value that is never used." verbose="Variable &apos;bit&apos; is assigned a value that is never used." cwe="563" file0="../../../lib/m17_decoder_impl.cc">
            <location file="../../../lib/m17_decoder_impl.cc" line="225" column="8"/>
            <symbol>bit</symbol>
        </error>
