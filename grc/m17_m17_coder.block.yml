id: m17_m17_coder
label: m17_coder
category: '[m17]'

parameters:
- id: src_id
  label: Source ID
  dtype: string
  default: 'EMITTR'
- id: dst_id
  label: Destination ID
  dtype: string
  default: 'RECVER'
- id: type
  label: Type
  dtype: int
  default: 0
  options: [0, 1, 2, 3, 4, 5]
  option_labels: ['option 0', 'option 1', 'option 2', 'option 3', 'option 4', 'option 5']
- id: meta
  label: Meta
  dtype: string
  default: 'helloworld'
- id: debug
  label: Debug
  dtype: bool
  default: 'False'
  options: ['True', 'False']

asserts:
    - ${ type < 65536 }
    - ${ len(dst_id) < 10 }
    - ${ len(src_id) < 10 }
templates:
  imports: from gnuradio import m17
  make: m17.m17_coder(${src_id},${dst_id},${type},${meta},${debug})
  callbacks:
    - set_meta(${meta})
    - set_src_id(${src_id})
    - set_dst_id(${dst_id})
    - set_type(${type})
    - set_debug(${debug})

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
  domain: stream
  dtype: byte
  vlen: 1
  optional: 0

outputs:
- label: out
  domain: stream
  dtype: float
  vlen: 1
  optional: 0

documentation: |-
     The m17-coder block reads a byte datastream clocked at 200 bits/s and outputs a real stream at 24 times this input rate (4800 Hz). The source and destination fields are 9-character callsign strings, the type field is a 0-65535 value and the meta field a free string which can be updated during transmission.

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1

