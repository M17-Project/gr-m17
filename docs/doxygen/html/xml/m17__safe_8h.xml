<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="m17__safe_8h" kind="file" language="C++">
    <compoundname>m17_safe.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includedby refid="viterbi_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/decode/viterbi.c</includedby>
    <includedby refid="m17_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/m17.c</includedby>
    <includedby refid="m17__safe_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/m17_safe.c</includedby>
    <includedby refid="test__improvements_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/test_improvements.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/haaken/github-projects/gr-m17/libm17/m17_safe.h</label>
        <link refid="m17__safe_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="m17__safe_8h_1a2c8e1b073e46c666669db72dcae73ed0" prot="public" static="no">
        <name>M17_MUTEX_DECLARE</name>
        <param><defname>name</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" line="43" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17__safe_8h_1a2c34dbc1b48a731b3174e8e17c36ade4" prot="public" static="no">
        <name>M17_MUTEX_LOCK</name>
        <param><defname>mutex</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" line="44" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17__safe_8h_1a8d6d01555eeca4a4948fbae8ea2e88a7" prot="public" static="no">
        <name>M17_MUTEX_UNLOCK</name>
        <param><defname>mutex</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" line="45" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17__safe_8h_1a87bd37b333bd44edca0493a6620941ea" prot="public" static="no">
        <name>M17_BOUNDS_CHECK</name>
        <param><defname>ptr</defname></param>
        <param><defname>size</defname></param>
        <param><defname>max_size</defname></param>
        <initializer>    do { \
        if ((ptr) == NULL || (size) &gt; (max_size) || (size) == 0) { \
            return M17_ERROR_INVALID_PARAM; \
        } \
    } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" line="49" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" bodystart="49" bodyend="54"/>
      </memberdef>
      <memberdef kind="define" id="m17__safe_8h_1a7d5c8b61edb08fb632a3a0c15a6997a2" prot="public" static="no">
        <name>M17_BUFFER_CHECK</name>
        <param><defname>ptr</defname></param>
        <param><defname>size</defname></param>
        <param><defname>max_size</defname></param>
        <initializer>    do { \
        if ((ptr) == NULL || (size) &gt; (max_size)) { \
            return M17_ERROR_BUFFER_OVERFLOW; \
        } \
    } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" line="56" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" bodystart="56" bodyend="61"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532" prot="public" static="no" strong="no">
        <type></type>
        <name>m17_error_t</name>
        <enumvalue id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532a186cf9ef0a93f86e7314e4a6e642d60f" prot="public">
          <name>M17_SUCCESS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532a9210f0aad3a82266dac342c99466f0a4" prot="public">
          <name>M17_ERROR_NULL_POINTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532a576f47f685b9b65135f1abae0727d0db" prot="public">
          <name>M17_ERROR_INVALID_PARAM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532a5bfd3d68d5151252b40b6416f772723d" prot="public">
          <name>M17_ERROR_BUFFER_OVERFLOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532a7c7f0dd2c359fe120260188714a26ca6" prot="public">
          <name>M17_ERROR_INVALID_LENGTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532a6831ad0f04492797cc93d34adb68144e" prot="public">
          <name>M17_ERROR_INVALID_SYNCWORD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532ac3942c09ead93a1d7dbfd33321d54892" prot="public">
          <name>M17_ERROR_DECODE_FAILED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532a6f1ec3c9a9df1ca669a55faadc48fc6f" prot="public">
          <name>M17_ERROR_CRC_MISMATCH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532a5e4ee14ba56cd47d8fa0231dcbdc7ef4" prot="public">
          <name>M17_ERROR_INVALID_CALLSIGN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532a65abec18552b0c019efb60681d4ca596" prot="public">
          <name>M17_ERROR_INVALID_FRAME_TYPE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532a2a8bd7db8c9fa96266b4d70731b28fb8" prot="public">
          <name>M17_ERROR_MEMORY_ALLOCATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532a930c05c2c9da35d1c9f6df4bc40fb8e4" prot="public">
          <name>M17_ERROR_THREAD_SAFETY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__safe_8h_1a700f9699fdb0634439b7fff2c22ac532a9d250d441720a2223503b677c22fe5cb" prot="public">
          <name>M17_ERROR_INTERNAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" line="20" column="1" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" bodystart="20" bodyend="34"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="m17__safe_8h_1a4244072673b7e22f50030f588f076590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_safe_memcpy</definition>
        <argsstring>(void *dest, size_t dest_size, const void *src, size_t src_size)</argsstring>
        <name>m17_safe_memcpy</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dest_size</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>src_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" line="64" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.c" bodystart="18" bodyend="34" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" declline="64" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="m17__safe_8h_1a45b60b7da4e735d00a330b74120250ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>m17_error_t</type>
        <definition>m17_error_t m17_safe_memset</definition>
        <argsstring>(void *dest, size_t dest_size, int value, size_t count)</argsstring>
        <name>m17_safe_memset</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dest_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" line="65" column="13" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.c" bodystart="36" bodyend="48" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" declline="65" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="m17__safe_8h_1a19287b9e11ac55f115c8b0df3d143fed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>m17_error_t</type>
        <definition>m17_error_t m17_validate_callsign</definition>
        <argsstring>(const char *callsign)</argsstring>
        <name>m17_validate_callsign</name>
        <param>
          <type>const char *</type>
          <declname>callsign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" line="68" column="13" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.c" bodystart="50" bodyend="72" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" declline="68" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="m17__safe_8h_1a7fa75de4740f663151f99a08c640e36d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>m17_error_t</type>
        <definition>m17_error_t m17_validate_frame_type</definition>
        <argsstring>(uint8_t frame_type)</argsstring>
        <name>m17_validate_frame_type</name>
        <param>
          <type>uint8_t</type>
          <declname>frame_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" line="69" column="13" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.c" bodystart="74" bodyend="82" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" declline="69" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="m17__safe_8h_1a4ecb3d353e61ee5d8261d589ed483cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>m17_error_t</type>
        <definition>m17_error_t m17_validate_syncword</definition>
        <argsstring>(uint16_t syncword)</argsstring>
        <name>m17_validate_syncword</name>
        <param>
          <type>uint16_t</type>
          <declname>syncword</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" line="70" column="13" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.c" bodystart="84" bodyend="96" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" declline="70" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="m17__safe_8h_1a0613197acae523923f636e277798b683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * m17_error_string</definition>
        <argsstring>(m17_error_t error)</argsstring>
        <name>m17_error_string</name>
        <param>
          <type>m17_error_t</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" line="73" column="12" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.c" bodystart="98" bodyend="130" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h" declline="73" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>m17_safe.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safety<sp/>and<sp/>error<sp/>handling<sp/>utilities<sp/>for<sp/>M17<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wojciech<sp/>Kaczmarski,<sp/>SP5WWP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>Foundation,<sp/>12<sp/>March<sp/>2025</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Error<sp/>codes<sp/>for<sp/>M17<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_SUCCESS<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_ERROR_NULL_POINTER,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_ERROR_INVALID_PARAM,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_ERROR_BUFFER_OVERFLOW,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_ERROR_INVALID_LENGTH,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_ERROR_INVALID_SYNCWORD,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_ERROR_DECODE_FAILED,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_ERROR_CRC_MISMATCH,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_ERROR_INVALID_CALLSIGN,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_ERROR_INVALID_FRAME_TYPE,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_ERROR_MEMORY_ALLOCATION,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_ERROR_THREAD_SAFETY,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_ERROR_INTERNAL</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<sp/>m17_error_t;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thread<sp/>safety<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>M17_THREAD_SAFE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_MUTEX_DECLARE(name)<sp/>static<sp/>pthread_mutex_t<sp/>name<sp/>=<sp/>PTHREAD_MUTEX_INITIALIZER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_MUTEX_LOCK(mutex)<sp/>pthread_mutex_lock(&amp;mutex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_MUTEX_UNLOCK(mutex)<sp/>pthread_mutex_unlock(&amp;mutex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_MUTEX_DECLARE(name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_MUTEX_LOCK(mutex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_MUTEX_UNLOCK(mutex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bounds<sp/>checking<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_BOUNDS_CHECK(ptr,<sp/>size,<sp/>max_size)<sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((ptr)<sp/>==<sp/>NULL<sp/>||<sp/>(size)<sp/>&gt;<sp/>(max_size)<sp/>||<sp/>(size)<sp/>==<sp/>0)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>M17_ERROR_INVALID_PARAM;<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_BUFFER_CHECK(ptr,<sp/>size,<sp/>max_size)<sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((ptr)<sp/>==<sp/>NULL<sp/>||<sp/>(size)<sp/>&gt;<sp/>(max_size))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>M17_ERROR_BUFFER_OVERFLOW;<sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>memory<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_safe_memcpy(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dest_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>src_size);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">m17_error_t<sp/>m17_safe_memset(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dest,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dest_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Input<sp/>validation<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">m17_error_t<sp/>m17_validate_callsign(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>callsign);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">m17_error_t<sp/>m17_validate_frame_type(uint8_t<sp/>frame_type);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">m17_error_t<sp/>m17_validate_syncword(uint16_t<sp/>syncword);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Error<sp/>reporting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>m17_error_string(m17_error_t<sp/>error);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/haaken/github-projects/gr-m17/libm17/m17_safe.h"/>
  </compounddef>
</doxygen>
