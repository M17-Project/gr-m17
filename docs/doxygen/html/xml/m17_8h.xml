<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="m17_8h" kind="file" language="C++">
    <compoundname>m17.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="secure__memory_8h" local="yes">crypto/secure_memory.h</includes>
    <includes refid="validation_8h" local="yes">crypto/validation.h</includes>
    <includes refid="key__derivation_8h" local="yes">crypto/key_derivation.h</includes>
    <includes refid="replay__protection_8h" local="yes">crypto/replay_protection.h</includes>
    <includes refid="bounds__checking_8h" local="yes">crypto/bounds_checking.h</includes>
    <includes refid="security__monitoring_8h" local="yes">crypto/security_monitoring.h</includes>
    <includes refid="trustzone_8h" local="yes">crypto/trustzone.h</includes>
    <includes refid="optee_8h" local="yes">crypto/optee.h</includes>
    <includes refid="secure__boot_8h" local="yes">crypto/secure_boot.h</includes>
    <includes refid="constant__time_8h" local="yes">crypto/constant_time.h</includes>
    <includedby refid="m17__coder__impl_8cc" local="yes">/home/haaken/github-projects/gr-m17/lib/m17_coder_impl.cc</includedby>
    <includedby refid="m17__coder__impl_8h" local="yes">/home/haaken/github-projects/gr-m17/lib/m17_coder_impl.h</includedby>
    <includedby refid="m17__decoder__impl_8cc" local="yes">/home/haaken/github-projects/gr-m17/lib/m17_decoder_impl.cc</includedby>
    <includedby refid="m17__decoder__impl_8h" local="yes">/home/haaken/github-projects/gr-m17/lib/m17_decoder_impl.h</includedby>
    <includedby refid="aes__gcm_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/aes_gcm.c</includedby>
    <includedby refid="bounds__checking_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.c</includedby>
    <includedby refid="constant__time_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.c</includedby>
    <includedby refid="constant__time_8h" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h</includedby>
    <includedby refid="curve25519_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/curve25519.c</includedby>
    <includedby refid="ed25519_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/ed25519.c</includedby>
    <includedby refid="hkdf_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/hkdf.c</includedby>
    <includedby refid="key__derivation_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/key_derivation.c</includedby>
    <includedby refid="optee_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/optee.c</includedby>
    <includedby refid="replay__protection_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/replay_protection.c</includedby>
    <includedby refid="secure__boot_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/secure_boot.c</includedby>
    <includedby refid="secure__memory_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/secure_memory.c</includedby>
    <includedby refid="security__monitoring_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/security_monitoring.c</includedby>
    <includedby refid="trustzone_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/trustzone.c</includedby>
    <includedby refid="validation_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/crypto/validation.c</includedby>
    <includedby refid="decode_2symbols_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/decode/symbols.c</includedby>
    <includedby refid="viterbi_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/decode/viterbi.c</includedby>
    <includedby refid="convol_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/encode/convol.c</includedby>
    <includedby refid="encode_2symbols_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/encode/symbols.c</includedby>
    <includedby refid="m17_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/m17.c</includedby>
    <includedby refid="m17__safe_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/m17_safe.c</includedby>
    <includedby refid="golay_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/math/golay.c</includedby>
    <includedby refid="math_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/math/math.c</includedby>
    <includedby refid="rrc_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/math/rrc.c</includedby>
    <includedby refid="call_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/payload/call.c</includedby>
    <includedby refid="crc_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/payload/crc.c</includedby>
    <includedby refid="lich_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/payload/lich.c</includedby>
    <includedby refid="lsf_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/payload/lsf.c</includedby>
    <includedby refid="interleave_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/phy/interleave.c</includedby>
    <includedby refid="randomize_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/phy/randomize.c</includedby>
    <includedby refid="slice_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/phy/slice.c</includedby>
    <includedby refid="sync_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/phy/sync.c</includedby>
    <includedby refid="test__critical__security_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/test_critical_security.c</includedby>
    <includedby refid="test__crypto_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/test_crypto.c</includedby>
    <includedby refid="test__improvements_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/test_improvements.c</includedby>
    <includedby refid="test__trustzone__tee_8c" local="yes">/home/haaken/github-projects/gr-m17/libm17/test_trustzone_tee.c</includedby>
    <includedby refid="unit__tests_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/unit_tests/unit_tests.c</includedby>
    <incdepgraph>
      <node id="12">
        <label>crypto/bounds_checking.h</label>
        <link refid="bounds__checking_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>crypto/constant_time.h</label>
        <link refid="constant__time_8h_source"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>crypto/key_derivation.h</label>
        <link refid="key__derivation_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>crypto/optee.h</label>
        <link refid="optee_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>crypto/replay_protection.h</label>
        <link refid="replay__protection_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>crypto/secure_boot.h</label>
        <link refid="secure__boot_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>crypto/secure_memory.h</label>
        <link refid="secure__memory_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>crypto/security_monitoring.h</label>
        <link refid="security__monitoring_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>crypto/trustzone.h</label>
        <link refid="trustzone_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>crypto/validation.h</label>
        <link refid="validation_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/haaken/github-projects/gr-m17/libm17/m17.h</label>
        <link refid="m17_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>math.h</label>
      </node>
      <node id="9">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/haaken/github-projects/gr-m17/lib/m17_coder_impl.h</label>
        <link refid="m17__coder__impl_8h_source"/>
      </node>
      <node id="3">
        <label>/home/haaken/github-projects/gr-m17/lib/m17_decoder_impl.h</label>
        <link refid="m17__decoder__impl_8h_source"/>
      </node>
      <node id="4">
        <label>/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h</label>
        <link refid="constant__time_8h_source"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/haaken/github-projects/gr-m17/libm17/m17.h</label>
        <link refid="m17_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structlsf__t" prot="public">lsf_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="m17_8h_1a4e0c4e9cbe06c546887c54a364177ba8" prot="public" static="no">
        <name>LIBM17_VERSION</name>
        <initializer>&quot;1.0.9&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="30" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a44af1b3b7c0b6b83b425d6675833cb1d" prot="public" static="no">
        <name>SYM_PER_SWD</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="33" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1af41df78b2585df7899961489ba7d6c3e" prot="public" static="no">
        <name>SYM_PER_PLD</name>
        <initializer>184</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="34" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a4d9b80d43146e1c668ece5858acdeeb6" prot="public" static="no">
        <name>SYM_PER_FRA</name>
        <initializer>192</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="35" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1aba8bb567fa86c404c5709f3dad233a61" prot="public" static="no">
        <name>M17_TYPE_PACKET</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="38" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a9285c4d2d4863a3824e4508bef1aaf17" prot="public" static="no">
        <name>M17_TYPE_STREAM</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="39" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1aaa035efb1de09d2a1a8a416bd5a58915" prot="public" static="no">
        <name>M17_TYPE_DATA</name>
        <initializer>(1&lt;&lt;1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="40" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a51c13c46444c53670e4dd97a885a4832" prot="public" static="no">
        <name>M17_TYPE_VOICE</name>
        <initializer>(2&lt;&lt;1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="41" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a1d59737edea604fd30a4b366a94b59c5" prot="public" static="no">
        <name>M17_TYPE_ENCR_NONE</name>
        <initializer>(0&lt;&lt;3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="42" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1afa8219bd134efad42d78f80c65b4bcf7" prot="public" static="no">
        <name>M17_TYPE_ENCR_SCRAM</name>
        <initializer>(1&lt;&lt;3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="43" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1ad1e94a9e484d772f413418af0afc0924" prot="public" static="no">
        <name>M17_TYPE_ENCR_AES</name>
        <initializer>(2&lt;&lt;3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="44" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1ae668026cd1f1d949b891facb06514e87" prot="public" static="no">
        <name>M17_TYPE_ENCR_ED25519</name>
        <initializer>(3&lt;&lt;3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="45" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1aa78bba7599e1a7153c4ae72361f28d48" prot="public" static="no">
        <name>M17_TYPE_ENCR_CURVE25519</name>
        <initializer>(4&lt;&lt;3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="46" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1accc6dbd790d9819bb5b07a349acad52c" prot="public" static="no">
        <name>M17_TYPE_ENCR_SCRAM_8</name>
        <initializer>(0&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="47" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1ad51ee7d0d889502065cde76635524242" prot="public" static="no">
        <name>M17_TYPE_ENCR_SCRAM_16</name>
        <initializer>(1&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="48" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a147d4d406ad5db3282a288a4bebd4569" prot="public" static="no">
        <name>M17_TYPE_ENCR_SCRAM_24</name>
        <initializer>(2&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="49" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a01d11f5301b9968a517f2531417a7c09" prot="public" static="no">
        <name>M17_TYPE_ENCR_AES128</name>
        <initializer>(0&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="50" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a7a38ea3213275352a9199f0429da02d4" prot="public" static="no">
        <name>M17_TYPE_ENCR_AES192</name>
        <initializer>(1&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="51" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1aede510cf78259c307b5dda38d0a36a30" prot="public" static="no">
        <name>M17_TYPE_ENCR_AES256</name>
        <initializer>(2&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="52" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1acae45f24d97c664dd430d5982130a502" prot="public" static="no">
        <name>M17_TYPE_ENCR_ED25519_SIGN</name>
        <initializer>(0&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="53" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1ab24625506a123feca2101f3462b4c653" prot="public" static="no">
        <name>M17_TYPE_ENCR_ED25519_VERIFY</name>
        <initializer>(1&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="54" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a3a02106f28d822c15d1d618a99392334" prot="public" static="no">
        <name>M17_TYPE_ENCR_CURVE25519_ECDH</name>
        <initializer>(0&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="55" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1ab0abfdbab057fb99ac4e1c2713c6b849" prot="public" static="no">
        <name>M17_TYPE_ENCR_CURVE25519_DERIVE</name>
        <initializer>(1&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="56" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1ac9861d024258989134da3b89da7b9747" prot="public" static="no">
        <name>M17_TYPE_CAN</name>
        <param><defname>x</defname></param>
        <initializer>(x&lt;&lt;7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="57" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1afd5e0d7e24251e83a57a4ad593527950" prot="public" static="no">
        <name>M17_TYPE_UNSIGNED</name>
        <initializer>(0&lt;&lt;11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="58" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a35162e8d9326e1ef90be662177d24d47" prot="public" static="no">
        <name>M17_TYPE_SIGNED</name>
        <initializer>(1&lt;&lt;11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="59" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a9806b7edd8ace3ea1d6d5e00e7f0ce31" prot="public" static="no">
        <name>M17_TYPE_META_TEXT</name>
        <initializer>(0&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="61" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1aa458247af3888df39f5d18f72844b781" prot="public" static="no">
        <name>M17_TYPE_META_POSITION</name>
        <initializer>(1&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="62" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1addb506f5e4d6e6c3e241d2fdc2f2c82e" prot="public" static="no">
        <name>M17_TYPE_META_EXT_CALL</name>
        <initializer>(2&lt;&lt;5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="63" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a3ef347ca8b566323b1781ce63e691283" prot="public" static="no">
        <name>M17_META_SOURCE_M17C</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="67" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a73b58677269debc0d63432cb2061b375" prot="public" static="no">
        <name>M17_META_SOURCE_OPENRTX</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="68" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a5d8bbbd373273239785c567006e55eeb" prot="public" static="no">
        <name>M17_META_SOURCE_OTHER</name>
        <initializer>255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="69" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a3ef347ca8b566323b1781ce63e691283" prot="public" static="no">
        <name>M17_META_SOURCE_M17C</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="70" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a7319530d3e46622244eb87319a3d21c1" prot="public" static="no">
        <name>M17_META_STATION_FIXED</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="72" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1ab5098fcbbe930ccd688a91ac97a61676" prot="public" static="no">
        <name>M17_META_STATION_MOBILE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="73" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a541f19029f02f3078a79bacfee02000f" prot="public" static="no">
        <name>M17_META_STATION_HANDHELD</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="74" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a38d4316f1fddae19d0990848528b5f26" prot="public" static="no">
        <name>M17_META_LAT_NORTH</name>
        <initializer>(0&lt;&lt;0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="76" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a19763fb1edc27dfac3a14dc74fc1af74" prot="public" static="no">
        <name>M17_META_LAT_SOUTH</name>
        <initializer>(1&lt;&lt;0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="77" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a175ef2ed1f5c1f849e200f8cf722068c" prot="public" static="no">
        <name>M17_META_LON_EAST</name>
        <initializer>(0&lt;&lt;1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="78" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a64c42b86959f8a9ddc3339e84f7e1e7e" prot="public" static="no">
        <name>M17_META_LON_WEST</name>
        <initializer>(1&lt;&lt;1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="79" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a06fac19fe3dcfd070382b20350d990c5" prot="public" static="no">
        <name>M17_META_ALT_DATA_INVALID</name>
        <initializer>(0&lt;&lt;2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="80" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a3c099293bdd45edb82456c7e8310cfbd" prot="public" static="no">
        <name>M17_META_ALT_DATA_VALID</name>
        <initializer>(1&lt;&lt;2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="81" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a23a813b176eaf2ea5e553a6bd03d27fa" prot="public" static="no">
        <name>M17_META_SPD_BEARING_INVALID</name>
        <initializer>(0&lt;&lt;3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="82" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a885da8e73e9ad2095bfc412dc1c513b3" prot="public" static="no">
        <name>M17_META_SPD_BEARING_VALID</name>
        <initializer>(1&lt;&lt;3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="83" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1afbed5d2a01f85c5c187c548320112a9c" prot="public" static="no">
        <name>CHAR_MAP</name>
        <initializer>&quot; ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-/.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="147" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a234a3ee7ebd76d2e4727a1055b4912c1" prot="public" static="no">
        <name>U40_9</name>
        <initializer>(262144000000000ULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="148" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a73ad6b804780a16da285aaca9857bf3a" prot="public" static="no">
        <name>U40_9_8</name>
        <initializer>(268697600000000ULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="149" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a2b00e1ba5793441c565686728a398a27" prot="public" static="no">
        <name>M17_CONVOL_K</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="238" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a2749f39d223b4694dd44844cb567ebb4" prot="public" static="no">
        <name>M17_CONVOL_STATES</name>
        <initializer>(1 &lt;&lt; (M17_CONVOL_K - 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="239" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a0807bc8b129517a2f8e8b68b79706d16" prot="public" static="no">
        <name>M17_ED25519_PUBLIC_KEY_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="248" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1ae3f2061a7da1cfbf574651147ad43731" prot="public" static="no">
        <name>M17_ED25519_PRIVATE_KEY_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="249" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a80b98a27ca26d4b5842dc249825d3b59" prot="public" static="no">
        <name>M17_ED25519_SIGNATURE_SIZE</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="250" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a49fc77bee54f5ba86cce395461662eb4" prot="public" static="no">
        <name>M17_ED25519_SEED_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="251" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a92ae61f3e7399c0552825f3af94d0d50" prot="public" static="no">
        <name>M17_CURVE25519_PUBLIC_KEY_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="259" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1ac34fb1654b2dc3c5254299be9694a06f" prot="public" static="no">
        <name>M17_CURVE25519_PRIVATE_KEY_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="260" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a4e541f9b444077b75eaf82a138788d6a" prot="public" static="no">
        <name>M17_CURVE25519_SHARED_SECRET_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="261" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1ac74629c1c7a03d28e347dcff872b4309" prot="public" static="no">
        <name>M17_HKDF_MAX_OUTPUT_SIZE</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="268" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1af17e0c683bf8fa929efd16c744bc1f6a" prot="public" static="no">
        <name>M17_HKDF_SALT_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="269" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1a717ee55bc48ea9946f8a630dad7f671d" prot="public" static="no">
        <name>M17_HKDF_INFO_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="270" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1abb8cf3e37d8b07ee071c3f4fc5352159" prot="public" static="no">
        <name>M17_AES_GCM_KEY_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="275" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1adc365fcaa0a798d7f4e79de483810039" prot="public" static="no">
        <name>M17_AES_GCM_IV_SIZE</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="276" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="m17_8h_1ac585023911f1ebba4aa40f0707529b42" prot="public" static="no">
        <name>M17_AES_GCM_TAG_SIZE</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="277" column="9" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="277" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="m17_8h_1a9e70389fa12865060876f7bf015d8965" prot="public" static="no" strong="no">
        <type></type>
        <name>pream_t</name>
        <enumvalue id="m17_8h_1a9e70389fa12865060876f7bf015d8965aabf91adf435b254ec3a29f457f54fbf4" prot="public">
          <name>PREAM_LSF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17_8h_1a9e70389fa12865060876f7bf015d8965a72777d2352c9991599c199e7b783ba52" prot="public">
          <name>PREAM_BERT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Preamble type (0 for LSF, 1 for BERT). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="89" column="1" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="enum" id="m17_8h_1a959a70edcd204b25bcec80c9b5dbece1" prot="public" static="no" strong="no">
        <type></type>
        <name>frame_t</name>
        <enumvalue id="m17_8h_1a959a70edcd204b25bcec80c9b5dbece1a950346e9c16e500811fa5a519285247e" prot="public">
          <name>FRAME_LSF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17_8h_1a959a70edcd204b25bcec80c9b5dbece1ab4820e6daaaeb79512c71eed2ee6354b" prot="public">
          <name>FRAME_STR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17_8h_1a959a70edcd204b25bcec80c9b5dbece1ae58539997f3dc527cfe09505edfc39be" prot="public">
          <name>FRAME_PKT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17_8h_1a959a70edcd204b25bcec80c9b5dbece1a3de0fa668afd6d5707414d32c993e704" prot="public">
          <name>FRAME_BERT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Frame type (0 - LSF, 1 - stream, 2 - packet, 3 - BERT). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="99" column="1" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" bodystart="100" bodyend="105"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="m17_8h_1acf3e454588bf301087327c7a7061f094" prot="public" static="no" extern="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t puncture_pattern_1[61]</definition>
        <argsstring>[61]</argsstring>
        <name>puncture_pattern_1</name>
        <briefdescription>
<para>P_1 puncture pattern for Link Setup Frames (LSF). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="137" column="22" bodyfile="/home/haaken/github-projects/gr-m17/libm17/encode/convol.c" bodystart="17" bodyend="22" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="137" declcolumn="22"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a344fd3f55ad99eae44551a3cdbf6548c" prot="public" static="no" extern="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t puncture_pattern_2[12]</definition>
        <argsstring>[12]</argsstring>
        <name>puncture_pattern_2</name>
        <briefdescription>
<para>P_2 puncture pattern for stream frames (excluding Link Information Channel - LICH). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="138" column="22" bodyfile="/home/haaken/github-projects/gr-m17/libm17/encode/convol.c" bodystart="27" bodyend="27" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="138" declcolumn="22"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a58fe581fd6133aca0bf8b174fa3854ea" prot="public" static="no" extern="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t puncture_pattern_3[8]</definition>
        <argsstring>[8]</argsstring>
        <name>puncture_pattern_3</name>
        <briefdescription>
<para>P_3 puncture pattern for packet frames. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="139" column="22" bodyfile="/home/haaken/github-projects/gr-m17/libm17/encode/convol.c" bodystart="32" bodyend="32" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="139" declcolumn="22"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a2d67d4db0f4c5bcc4885d289d7804528" prot="public" static="no" extern="yes" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t M17_CRC_POLY</definition>
        <argsstring></argsstring>
        <name>M17_CRC_POLY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="158" column="23" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/crc.c" bodystart="14" bodyend="-1" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="158" declcolumn="23"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a6f64468dba31783511c82ac2c9c35b54" prot="public" static="no" extern="yes" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t encode_matrix[12]</definition>
        <argsstring>[12]</argsstring>
        <name>encode_matrix</name>
        <briefdescription>
<para>Precomputed encoding matrix for Golay(24, 12). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="179" column="23" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/golay.c" bodystart="20" bodyend="24" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="179" declcolumn="23"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a9dc73157be8d3dc231b19bd9dcb42108" prot="public" static="no" extern="yes" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t decode_matrix[12]</definition>
        <argsstring>[12]</argsstring>
        <name>decode_matrix</name>
        <briefdescription>
<para>Precomputed decoding matrix for Golay(24, 12). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="180" column="23" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/golay.c" bodystart="30" bodyend="34" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="180" declcolumn="23"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a0d2931530c1f0c002603840572a77354" prot="public" static="no" extern="yes" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t intrl_seq[SYM_PER_PLD *2]</definition>
        <argsstring>[SYM_PER_PLD *2]</argsstring>
        <name>intrl_seq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="189" column="23" bodyfile="/home/haaken/github-projects/gr-m17/libm17/phy/interleave.c" bodystart="11" bodyend="36" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="189" declcolumn="23"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a2050d40f98b961619df4b1f8f67ed00d" prot="public" static="no" extern="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t rand_seq[46]</definition>
        <argsstring>[46]</argsstring>
        <name>rand_seq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="207" column="22" bodyfile="/home/haaken/github-projects/gr-m17/libm17/phy/randomize.c" bodystart="10" bodyend="14" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="207" declcolumn="22"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a9b7d59fce94f758eb30aac763bfdfa79" prot="public" static="no" extern="yes" mutable="no">
        <type>const float</type>
        <definition>const float rrc_taps_10[8 *10+1]</definition>
        <argsstring>[8 *10+1]</argsstring>
        <name>rrc_taps_10</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="218" column="20" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/rrc.c" bodystart="11" bodyend="40" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="218" declcolumn="20"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a4476bee65e6343495fb42dbebb2baf12" prot="public" static="no" extern="yes" mutable="no">
        <type>const float</type>
        <definition>const float rrc_taps_5[8 *5+1]</definition>
        <argsstring>[8 *5+1]</argsstring>
        <name>rrc_taps_5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="222" column="20" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/rrc.c" bodystart="44" bodyend="67" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="222" declcolumn="20"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a10dbf751334af2ffb18e9899f3975888" prot="public" static="no" extern="yes" mutable="no">
        <type>const int8_t</type>
        <definition>const int8_t symbol_map[4]</definition>
        <argsstring>[4]</argsstring>
        <name>symbol_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="226" column="21" bodyfile="/home/haaken/github-projects/gr-m17/libm17/encode/symbols.c" bodystart="10" bodyend="10" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="226" declcolumn="21"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1ab626bd2783461530f13b8b5e60608c95" prot="public" static="no" extern="yes" mutable="no">
        <type>const int8_t</type>
        <definition>const int8_t symbol_list[4]</definition>
        <argsstring>[4]</argsstring>
        <name>symbol_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="227" column="21" bodyfile="/home/haaken/github-projects/gr-m17/libm17/encode/symbols.c" bodystart="13" bodyend="13" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="227" declcolumn="21"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a97b9eab25f4126bd6a04b3a76b14d7e1" prot="public" static="no" extern="yes" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t SYNC_LSF</definition>
        <argsstring></argsstring>
        <name>SYNC_LSF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="231" column="23" bodyfile="/home/haaken/github-projects/gr-m17/libm17/phy/sync.c" bodystart="10" bodyend="-1" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="231" declcolumn="23"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a4c91f514ba9c2c20eb09b4418c9c3ee6" prot="public" static="no" extern="yes" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t SYNC_STR</definition>
        <argsstring></argsstring>
        <name>SYNC_STR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="232" column="23" bodyfile="/home/haaken/github-projects/gr-m17/libm17/phy/sync.c" bodystart="11" bodyend="-1" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="232" declcolumn="23"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a1095de3839867d000c7e2d4df9d3f5c7" prot="public" static="no" extern="yes" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t SYNC_PKT</definition>
        <argsstring></argsstring>
        <name>SYNC_PKT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="233" column="23" bodyfile="/home/haaken/github-projects/gr-m17/libm17/phy/sync.c" bodystart="12" bodyend="-1" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="233" declcolumn="23"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a0c04c4f0a826f62dfe9f0b7857014487" prot="public" static="no" extern="yes" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t SYNC_BER</definition>
        <argsstring></argsstring>
        <name>SYNC_BER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="234" column="23" bodyfile="/home/haaken/github-projects/gr-m17/libm17/phy/sync.c" bodystart="13" bodyend="-1" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="234" declcolumn="23"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1ade1700dec4f90b55a5666945ab8e2416" prot="public" static="no" extern="yes" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t EOT_MRKR</definition>
        <argsstring></argsstring>
        <name>EOT_MRKR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="235" column="23" bodyfile="/home/haaken/github-projects/gr-m17/libm17/phy/sync.c" bodystart="14" bodyend="-1" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="235" declcolumn="23"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a04ffa9ef2f133fd7b2b1f38c50bf850f" prot="public" static="no" extern="yes" mutable="no">
        <type>const int8_t</type>
        <definition>const int8_t eot_symbols[8]</definition>
        <argsstring>[8]</argsstring>
        <name>eot_symbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="283" column="21" bodyfile="/home/haaken/github-projects/gr-m17/libm17/encode/symbols.c" bodystart="16" bodyend="16" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="283" declcolumn="21"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a3848610fb2138ed48df8edb94e3954d4" prot="public" static="no" extern="yes" mutable="no">
        <type>const int8_t</type>
        <definition>const int8_t lsf_sync_symbols[8]</definition>
        <argsstring>[8]</argsstring>
        <name>lsf_sync_symbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="288" column="21" bodyfile="/home/haaken/github-projects/gr-m17/libm17/decode/symbols.c" bodystart="11" bodyend="11" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="288" declcolumn="21"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a47776318a7900b3318ac07362fda57d6" prot="public" static="no" extern="yes" mutable="no">
        <type>const int8_t</type>
        <definition>const int8_t str_sync_symbols[8]</definition>
        <argsstring>[8]</argsstring>
        <name>str_sync_symbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="289" column="21" bodyfile="/home/haaken/github-projects/gr-m17/libm17/decode/symbols.c" bodystart="12" bodyend="12" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="289" declcolumn="21"/>
      </memberdef>
      <memberdef kind="variable" id="m17_8h_1a528a4bed53457a7dd4c163436dbb577d" prot="public" static="no" extern="yes" mutable="no">
        <type>const int8_t</type>
        <definition>const int8_t pkt_sync_symbols[8]</definition>
        <argsstring>[8]</argsstring>
        <name>pkt_sync_symbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="290" column="21" bodyfile="/home/haaken/github-projects/gr-m17/libm17/decode/symbols.c" bodystart="13" bodyend="13" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="290" declcolumn="21"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="m17_8h_1a59ce5e3b66e4f6965f723e1efc84dcab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gen_preamble</definition>
        <argsstring>(float out[SYM_PER_FRA], uint32_t *cnt, pream_t type)</argsstring>
        <name>gen_preamble</name>
        <param>
          <type>float</type>
          <declname>out</declname>
          <array>[SYM_PER_FRA]</array>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type>pream_t</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="121" column="6" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="121" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1aa963da543d6b6be4eab431cb2424f28b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gen_preamble_i8</definition>
        <argsstring>(int8_t out[SYM_PER_FRA], uint32_t *cnt, pream_t type)</argsstring>
        <name>gen_preamble_i8</name>
        <param>
          <type>int8_t</type>
          <declname>out</declname>
          <array>[SYM_PER_FRA]</array>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type>pream_t</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Generate symbol stream for a preamble. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame buffer (192 int8_t). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable holding the number of written symbols. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Preamble type (pre-BERT or pre-LSF). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="122" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.c" bodystart="61" bodyend="79" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="122" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a2d106aee3bf7c1d21dbff3df8a17dec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gen_syncword</definition>
        <argsstring>(float out[SYM_PER_SWD], uint32_t *cnt, uint16_t syncword)</argsstring>
        <name>gen_syncword</name>
        <param>
          <type>float</type>
          <declname>out</declname>
          <array>[SYM_PER_SWD]</array>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>syncword</declname>
        </param>
        <briefdescription>
<para>Generate symbol stream for a syncword. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer (8 floats). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable holding the number of written symbols. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syncword</parametername>
</parameternamelist>
<parameterdescription>
<para>Syncword. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="123" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.c" bodystart="88" bodyend="94" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="123" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a05c785fc9f72edce33e90e30ee533cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gen_syncword_i8</definition>
        <argsstring>(int8_t out[SYM_PER_SWD], uint32_t *cnt, uint16_t syncword)</argsstring>
        <name>gen_syncword_i8</name>
        <param>
          <type>int8_t</type>
          <declname>out</declname>
          <array>[SYM_PER_SWD]</array>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>syncword</declname>
        </param>
        <briefdescription>
<para>Generate symbol stream for a syncword. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer (8 int8_t). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable holding the number of written symbols. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syncword</parametername>
</parameternamelist>
<parameterdescription>
<para>Syncword. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="124" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.c" bodystart="103" bodyend="109" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a3834b13f7881366c66edf79c340a2818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gen_data</definition>
        <argsstring>(float out[SYM_PER_PLD], uint32_t *cnt, const uint8_t *in)</argsstring>
        <name>gen_data</name>
        <param>
          <type>float</type>
          <declname>out</declname>
          <array>[SYM_PER_PLD]</array>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Generate symbol stream for frame contents (without the syncword). </para>
        </briefdescription>
        <detaileddescription>
<para>Can be used for both LSF and data frames.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer (184 floats). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable holding the number of written symbols. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Data input - unpacked bits (1 bit per byte). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="125" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.c" bodystart="119" bodyend="125" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="125" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a005cb26b94b5d314902181a134688e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gen_data_i8</definition>
        <argsstring>(int8_t out[SYM_PER_PLD], uint32_t *cnt, const uint8_t *in)</argsstring>
        <name>gen_data_i8</name>
        <param>
          <type>int8_t</type>
          <declname>out</declname>
          <array>[SYM_PER_PLD]</array>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Generate symbol stream for frame contents (without the syncword). </para>
        </briefdescription>
        <detaileddescription>
<para>Can be used for both LSF and data frames.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer (184 int8_t). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable holding the number of written symbols. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Data input - unpacked bits (1 bit per byte). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="126" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.c" bodystart="135" bodyend="141" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="126" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1ab51ccc192219b034a91cafedc66272ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gen_eot</definition>
        <argsstring>(float out[SYM_PER_FRA], uint32_t *cnt)</argsstring>
        <name>gen_eot</name>
        <param>
          <type>float</type>
          <declname>out</declname>
          <array>[SYM_PER_FRA]</array>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
<para>Generate symbol stream for the End of Transmission marker. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer (192 floats). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable holding the number of written symbols. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="127" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.c" bodystart="149" bodyend="155" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="127" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1aca4d9269d1e731e7d04d8016de488909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gen_eot_i8</definition>
        <argsstring>(int8_t out[SYM_PER_FRA], uint32_t *cnt)</argsstring>
        <name>gen_eot_i8</name>
        <param>
          <type>int8_t</type>
          <declname>out</declname>
          <array>[SYM_PER_FRA]</array>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
<para>Generate symbol stream for the End of Transmission marker. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer (192 int8_t). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable holding the number of written symbols. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="128" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.c" bodystart="163" bodyend="169" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="128" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a9d0a38129b75ef97c30ea2e6bdfb2c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gen_frame</definition>
        <argsstring>(float out[SYM_PER_FRA], const uint8_t *data, frame_t type, const lsf_t *lsf, uint8_t lich_cnt, uint16_t fn)</argsstring>
        <name>gen_frame</name>
        <param>
          <type>float</type>
          <declname>out</declname>
          <array>[SYM_PER_FRA]</array>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>frame_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="structlsf__t" kindref="compound">lsf_t</ref> *</type>
          <declname>lsf</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lich_cnt</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
<para>Generate frame symbols. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer for symbols (192 floats). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Payload (16 or 25 bytes). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame type (LSF, Stream, Packet). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lsf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a structure holding Link Setup Frame data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lich_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>LICH counter (0..5). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="129" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.c" bodystart="181" bodyend="217" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="129" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1ab9a918e15d8e79e27c2eec41d76dc7e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gen_frame_i8</definition>
        <argsstring>(int8_t out[SYM_PER_FRA], const uint8_t *data, frame_t type, const lsf_t *lsf, uint8_t lich_cnt, uint16_t fn)</argsstring>
        <name>gen_frame_i8</name>
        <param>
          <type>int8_t</type>
          <declname>out</declname>
          <array>[SYM_PER_FRA]</array>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>frame_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="structlsf__t" kindref="compound">lsf_t</ref> *</type>
          <declname>lsf</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lich_cnt</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
<para>Generate frame symbols. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer for symbols (192 int8_t). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Payload (16 or 25 bytes). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame type (LSF, Stream, Packet). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lsf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a structure holding Link Setup Frame data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lich_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>LICH counter (0..5). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="130" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.c" bodystart="229" bodyend="265" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="130" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a9dfee4aa304cea1a011c761e337696e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t decode_LSF</definition>
        <argsstring>(lsf_t *lsf, const float pld_symbs[SYM_PER_PLD])</argsstring>
        <name>decode_LSF</name>
        <param>
          <type><ref refid="structlsf__t" kindref="compound">lsf_t</ref> *</type>
          <declname>lsf</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>pld_symbs</declname>
          <array>[SYM_PER_PLD]</array>
        </param>
        <briefdescription>
<para>Decode the Link Setup Frame from a symbol stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lsf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an LSF struct. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pld_symbs</parametername>
</parameternamelist>
<parameterdescription>
<para>Input 184 symbols represented as floats: {-3, -1, +1, +3}. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Viterbi metric for the payload. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="132" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.c" bodystart="274" bodyend="297" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="132" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a9cf1169c625eb4d25fda7f97e15cef74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t decode_str_frame</definition>
        <argsstring>(uint8_t frame_data[16], uint8_t lich[5], uint16_t *fn, uint8_t *lich_cnt, const float pld_symbs[SYM_PER_PLD])</argsstring>
        <name>decode_str_frame</name>
        <param>
          <type>uint8_t</type>
          <declname>frame_data</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lich</declname>
          <array>[5]</array>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>lich_cnt</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>pld_symbs</declname>
          <array>[SYM_PER_PLD]</array>
        </param>
        <briefdescription>
<para>Decode a single Stream Frame from a symbol stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a 16-byte array for the decoded payload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lich</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a 5-byte array for the decoded LICH data chunk. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a uint16_t variable for the Frame Number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lich_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a uint8_t variable for the LICH Counter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pld_symbs</parametername>
</parameternamelist>
<parameterdescription>
<para>Input 184 symbols represented as floats: {-3, -1, +1, +3}. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Viterbi metric for the payload. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="133" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.c" bodystart="309" bodyend="335" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="133" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a38746a854354f7b0cda6ae2503cc475f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t decode_pkt_frame</definition>
        <argsstring>(uint8_t frame_data[25], uint8_t *eof, uint8_t *fn, const float pld_symbs[SYM_PER_PLD])</argsstring>
        <name>decode_pkt_frame</name>
        <param>
          <type>uint8_t</type>
          <declname>frame_data</declname>
          <array>[25]</array>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>eof</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>pld_symbs</declname>
          <array>[SYM_PER_PLD]</array>
        </param>
        <briefdescription>
<para>Decode a single Packet Frame from a symbol stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a 25-byte array for the decoded payload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eof</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a uint8_t variable for the End of Frame marker. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a uint8_t variable for the Frame Number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pld_symbs</parametername>
</parameternamelist>
<parameterdescription>
<para>Input 184 symbols represented as floats: {-3, -1, +1, +3}. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Viterbi metric for the payload. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="134" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17.c" bodystart="346" bodyend="366" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="134" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a761604e6d525bd8b8f61a896021fbf7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void conv_encode_stream_frame</definition>
        <argsstring>(uint8_t *out, const uint8_t *in, uint16_t fn)</argsstring>
        <name>conv_encode_stream_frame</name>
        <param>
          <type>uint8_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
<para>Encode M17 stream frame using convolutional encoder with puncturing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output - unpacked array of bits, 272 type-3 bits. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input - packed array of uint8_t, 144 type-1 bits. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Input - 16-bit frame number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="141" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/encode/convol.c" bodystart="41" bodyend="93" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="141" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a03087bc33768e2c64806bb0de3fad4d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void conv_encode_packet_frame</definition>
        <argsstring>(uint8_t out[SYM_PER_PLD *2], const uint8_t in[26])</argsstring>
        <name>conv_encode_packet_frame</name>
        <param>
          <type>uint8_t</type>
          <declname>out</declname>
          <array>[SYM_PER_PLD *2]</array>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>in</declname>
          <array>[26]</array>
        </param>
        <briefdescription>
<para>Encode M17 packet frame using convolutional encoder with puncturing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output - unpacked array of bits, 368 type-3 bits. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input - packed array of uint8_t, 206 type-1 bits (200 bits of data, 1 bit End of Frame indicator, 5 bits frame/byte counter). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="142" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/encode/convol.c" bodystart="102" bodyend="149" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="142" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a5301766eded7dc3dc209ec0929546801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void conv_encode_LSF</definition>
        <argsstring>(uint8_t out[SYM_PER_PLD *2], const lsf_t *in)</argsstring>
        <name>conv_encode_LSF</name>
        <param>
          <type>uint8_t</type>
          <declname>out</declname>
          <array>[SYM_PER_PLD *2]</array>
        </param>
        <param>
          <type>const <ref refid="structlsf__t" kindref="compound">lsf_t</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Encode M17 stream frame using convolutional encoder with puncturing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output - unpacked array of bits, 368 type-3 bits. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input - pointer to a struct holding the Link Setup Data and its 16-bit CRC. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="143" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/encode/convol.c" bodystart="157" bodyend="249" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="143" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a573028f0d107ce9f9878ff978c160745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void conv_encode_bert_frame</definition>
        <argsstring>(uint8_t out[SYM_PER_PLD *2], const uint8_t in[25])</argsstring>
        <name>conv_encode_bert_frame</name>
        <param>
          <type>uint8_t</type>
          <declname>out</declname>
          <array>[SYM_PER_PLD *2]</array>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>in</declname>
          <array>[25]</array>
        </param>
        <briefdescription>
<para>Encode M17 BERT frame using convolutional encoder with puncturing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output - unpacked array of bits, 368 type-3 bits. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input - packed array of uint8_t, 197 type-1 bits. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="144" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/encode/convol.c" bodystart="257" bodyend="299" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="144" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1abaa23d7446502b488f0c2bdd3309e4ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decode_callsign_bytes</definition>
        <argsstring>(uint8_t *outp, const uint8_t inp[6])</argsstring>
        <name>decode_callsign_bytes</name>
        <param>
          <type>uint8_t *</type>
          <declname>outp</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>inp</declname>
          <array>[6]</array>
        </param>
        <briefdescription>
<para>Decode a 6-byte long array (big-endian) into callsign string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outp</parametername>
</parameternamelist>
<parameterdescription>
<para>Decoded callsign string (null-terminated). Must be at least 10 bytes long and pre-allocated by the caller. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a byte array holding the encoded value (big-endian). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="151" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/call.c" bodystart="62" bodyend="71" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="151" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1af8768a139d0e331ada0224ef56a7f81a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decode_callsign_value</definition>
        <argsstring>(uint8_t *outp, uint64_t inp)</argsstring>
        <name>decode_callsign_value</name>
        <param>
          <type>uint8_t *</type>
          <declname>outp</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>inp</declname>
        </param>
        <briefdescription>
<para>Decode a 48-bit value (stored as uint64_t) into callsign string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outp</parametername>
</parameternamelist>
<parameterdescription>
<para>Decoded callsign string (null-terminated). Must be at least 10 bytes long and pre-allocated by the caller. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>Encoded value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="152" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/call.c" bodystart="20" bodyend="54" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="152" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a3c47af3a10d7453cefbb9cc988e39732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t encode_callsign_bytes</definition>
        <argsstring>(uint8_t out[6], const uint8_t *inp)</argsstring>
        <name>encode_callsign_bytes</name>
        <param>
          <type>uint8_t</type>
          <declname>out</declname>
          <array>[6]</array>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>inp</declname>
        </param>
        <briefdescription>
<para>Encode callsign string and store in a 6-byte array (big-endian) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a byte array for the encoded value (big-endian). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>Callsign string (null-terminated). Maximum 9 characters long (excluding null terminator). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int8_t Return value, 0 -&gt; OK. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="153" column="8" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/call.c" bodystart="128" bodyend="141" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="153" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a464c865a8ea90c12d3c1ea91f460de2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t encode_callsign_value</definition>
        <argsstring>(uint64_t *out, const uint8_t *inp)</argsstring>
        <name>encode_callsign_value</name>
        <param>
          <type>uint64_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>inp</declname>
        </param>
        <briefdescription>
<para>Encode callsign string into a 48-bit value, stored as uint64_t. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a uint64_t variable for the encoded value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>Callsign string (null-terminated). Maximum 9 characters long (excluding null terminator). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int8_t Return value, 0 -&gt; OK. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="154" column="8" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/call.c" bodystart="80" bodyend="119" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="154" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a1994738e5c29a9d80594a26932dcfa71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t CRC_M17</definition>
        <argsstring>(const uint8_t *in, uint16_t len)</argsstring>
        <name>CRC_M17</name>
        <param>
          <type>const uint8_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Calculate CRC value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input byte array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Input&apos;s length. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t CRC value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="160" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/crc.c" bodystart="23" bodyend="39" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="160" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a3e31ba6b80094ce6215ece75bf3469e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t LSF_CRC</definition>
        <argsstring>(const lsf_t *in)</argsstring>
        <name>LSF_CRC</name>
        <param>
          <type>const <ref refid="structlsf__t" kindref="compound">lsf_t</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Calculate CRC value for the Link Setup Frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an LSF struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t CRC value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="161" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/crc.c" bodystart="47" bodyend="57" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="161" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1ae9261b4533b4f8d76b891857cd163cb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void extract_LICH</definition>
        <argsstring>(uint8_t outp[6], uint8_t cnt, const lsf_t *inp)</argsstring>
        <name>extract_LICH</name>
        <param>
          <type>uint8_t</type>
          <declname>outp</declname>
          <array>[6]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type>const <ref refid="structlsf__t" kindref="compound">lsf_t</ref> *</type>
          <declname>inp</declname>
        </param>
        <briefdescription>
<para>Extract LICH from the whole LSF. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outp</parametername>
</parameternamelist>
<parameterdescription>
<para>6-byte array for the LICH. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>LICH counter (0 to 5) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an LSF struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="164" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/lich.c" bodystart="20" bodyend="78" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="164" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a21d266dd9aed0abb202e8b6ae96582b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unpack_LICH</definition>
        <argsstring>(uint8_t *out, const uint8_t in[12])</argsstring>
        <name>unpack_LICH</name>
        <param>
          <type>uint8_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>in</declname>
          <array>[12]</array>
        </param>
        <briefdescription>
<para>Unpack LICH bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Unpacked, encoded LICH bits (array of at least 96 bytes). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>12-byte (96 bits) encoded LICH, packed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="165" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/lich.c" bodystart="86" bodyend="93" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="165" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1aab55c8f92ed171ddc8afdba449f173f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_LSF_CRC</definition>
        <argsstring>(lsf_t *lsf)</argsstring>
        <name>update_LSF_CRC</name>
        <param>
          <type><ref refid="structlsf__t" kindref="compound">lsf_t</ref> *</type>
          <declname>lsf</declname>
        </param>
        <briefdescription>
<para>Update LSF CRC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lsf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an LSF struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="168" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/lsf.c" bodystart="17" bodyend="22" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="168" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a7e92764244ff3880c41995cfaaa558dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_LSF</definition>
        <argsstring>(lsf_t *lsf, char *src, char *dst, uint16_t type, uint8_t meta[14])</argsstring>
        <name>set_LSF</name>
        <param>
          <type><ref refid="structlsf__t" kindref="compound">lsf_t</ref> *</type>
          <declname>lsf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>meta</declname>
          <array>[14]</array>
        </param>
        <briefdescription>
<para>Fill LSF data structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lsf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an LSF struct. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the source callsign. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the destination callsign. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the LSF TYPE field. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meta</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a 14-byte array for META field contents. NULL pointer zeros out META field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="169" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/lsf.c" bodystart="34" bodyend="48" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="169" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a06d350c02ee5635218f433da1afde900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_LSF_meta</definition>
        <argsstring>(lsf_t *lsf, const uint8_t meta[14])</argsstring>
        <name>set_LSF_meta</name>
        <param>
          <type><ref refid="structlsf__t" kindref="compound">lsf_t</ref> *</type>
          <declname>lsf</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>meta</declname>
          <array>[14]</array>
        </param>
        <briefdescription>
<para>Fill the LSF META field and update the CRC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lsf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an LSF struct. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meta</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a 14-byte array for META field contents. NULL pointer zeros out META field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="170" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/lsf.c" bodystart="57" bodyend="65" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="170" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a22907929558a1118a3630b6713257122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_LSF_meta_position</definition>
        <argsstring>(lsf_t *lsf, uint8_t data_source, uint8_t station_type, float lat, float lon, uint8_t flags, int32_t altitude, uint16_t bearing, uint8_t speed)</argsstring>
        <name>set_LSF_meta_position</name>
        <param>
          <type><ref refid="structlsf__t" kindref="compound">lsf_t</ref> *</type>
          <declname>lsf</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data_source</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>station_type</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lat</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lon</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bearing</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
<para>Fill the LSF META field with position data and update the CRC. </para>
        </briefdescription>
        <detaileddescription>
<para>Hemisphere setting flags are applied automatically.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lsf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an LSF struct. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_source</parametername>
</parameternamelist>
<parameterdescription>
<para>Data source. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>station_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the transmitting station. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lat</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude in degrees. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lon</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude in degrees. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Hemisphere, altitude, speed, and bearing field. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude in feet (-1500..64035). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bearing</parametername>
</parameternamelist>
<parameterdescription>
<para>Bearing in degrees. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>Speed in miles per hour. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="171" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/lsf.c" bodystart="81" bodyend="131" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="171" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1afb5dc205abb04de67fff759601b169d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_LSF_meta_ecd</definition>
        <argsstring>(lsf_t *lsf, const char *cf1, const char *cf2)</argsstring>
        <name>set_LSF_meta_ecd</name>
        <param>
          <type><ref refid="structlsf__t" kindref="compound">lsf_t</ref> *</type>
          <declname>lsf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cf1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cf2</declname>
        </param>
        <briefdescription>
<para>Fill the LSF META field with Extended Callsign Data and update the CRC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lsf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an LSF struct. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cf1</parametername>
</parameternamelist>
<parameterdescription>
<para>Callsign Field 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cf2</parametername>
</parameternamelist>
<parameterdescription>
<para>Callsign Field 2. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="173" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/lsf.c" bodystart="140" bodyend="148" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="173" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1ae1a49d17a06b7053109813aeebffa463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_LSF_meta_nonce</definition>
        <argsstring>(lsf_t *lsf, time_t ts, const uint8_t rand[10])</argsstring>
        <name>set_LSF_meta_nonce</name>
        <param>
          <type><ref refid="structlsf__t" kindref="compound">lsf_t</ref> *</type>
          <declname>lsf</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>ts</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>rand</declname>
          <array>[10]</array>
        </param>
        <briefdescription>
<para>Fill the LSF META field with nonce and update the CRC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lsf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an LSF struct. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ts</parametername>
</parameternamelist>
<parameterdescription>
<para>Timestamp (Unix epoch). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rand</parametername>
</parameternamelist>
<parameterdescription>
<para>Random, 10-byte vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="174" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/lsf.c" bodystart="157" bodyend="170" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="174" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a69aefcf41a4337a711fc06643038ca9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t get_LSF_meta_position</definition>
        <argsstring>(uint8_t *data_source, uint8_t *station_type, float *lat, float *lon, uint8_t *flags, int32_t *altitude, uint16_t *bearing, uint8_t *speed, const lsf_t *lsf)</argsstring>
        <name>get_LSF_meta_position</name>
        <param>
          <type>uint8_t *</type>
          <declname>data_source</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>station_type</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>lat</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>lon</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>bearing</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>speed</declname>
        </param>
        <param>
          <type>const <ref refid="structlsf__t" kindref="compound">lsf_t</ref> *</type>
          <declname>lsf</declname>
        </param>
        <briefdescription>
<para>Decode the LSF META position data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_source</parametername>
</parameternamelist>
<parameterdescription>
<para>Data source. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>station_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the transmitting station. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lat</parametername>
</parameternamelist>
<parameterdescription>
<para>Latitude in degrees. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lon</parametername>
</parameternamelist>
<parameterdescription>
<para>Longitude in degrees. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Hemisphere, altitude, speed, and bearing field. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>altitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Altitude in feet (-1500..64035). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bearing</parametername>
</parameternamelist>
<parameterdescription>
<para>Bearing in degrees. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>Speed in miles per hour. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lsf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an LSF struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if CRC is valid, -1 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="175" column="8" bodyfile="/home/haaken/github-projects/gr-m17/libm17/payload/lsf.c" bodystart="186" bodyend="246" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="175" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a5a68cc9f063d854dc8973684f806809c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t golay24_encode</definition>
        <argsstring>(uint16_t data)</argsstring>
        <name>golay24_encode</name>
        <param>
          <type>uint16_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Encode a 12-bit value with Golay(24, 12). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>12-bit input value (right justified). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t 24-bit Golay codeword. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="182" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/golay.c" bodystart="42" bodyend="55" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="182" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a3f51fa5fd9e9dbe75a155c64b7a85ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t golay24_sdecode</definition>
        <argsstring>(const uint16_t codeword[24])</argsstring>
        <name>golay24_sdecode</name>
        <param>
          <type>const uint16_t</type>
          <declname>codeword</declname>
          <array>[24]</array>
        </param>
        <briefdescription>
<para>Soft decode Golay(24, 12) codeword. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>codeword</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a 24-element soft-valued (fixed-point) bit codeword. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t Decoded data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="183" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/golay.c" bodystart="223" bodyend="236" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="183" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1abf6693ac97edd038e4995903af711f6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decode_LICH</definition>
        <argsstring>(uint8_t outp[6], const uint16_t inp[96])</argsstring>
        <name>decode_LICH</name>
        <param>
          <type>uint8_t</type>
          <declname>outp</declname>
          <array>[6]</array>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>inp</declname>
          <array>[96]</array>
        </param>
        <briefdescription>
<para>Soft decode LICH into a 6-byte array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outp</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of packed, decoded bits. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an array of 96 soft bits. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="184" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/golay.c" bodystart="244" bodyend="262" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="184" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a741fbf4fcc93d6acaefe4515d0109f23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void encode_LICH</definition>
        <argsstring>(uint8_t outp[12], const uint8_t inp[6])</argsstring>
        <name>encode_LICH</name>
        <param>
          <type>uint8_t</type>
          <declname>outp</declname>
          <array>[12]</array>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>inp</declname>
          <array>[6]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="185" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/golay.c" bodystart="264" bodyend="284" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="185" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a8fb6467450191c083f516e16111beeee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reorder_bits</definition>
        <argsstring>(uint8_t outp[SYM_PER_PLD *2], const uint8_t inp[SYM_PER_PLD *2])</argsstring>
        <name>reorder_bits</name>
        <param>
          <type>uint8_t</type>
          <declname>outp</declname>
          <array>[SYM_PER_PLD *2]</array>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>inp</declname>
          <array>[SYM_PER_PLD *2]</array>
        </param>
        <briefdescription>
<para>Reorder (interleave) 368 unpacked payload bits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outp</parametername>
</parameternamelist>
<parameterdescription>
<para>Reordered, unpacked type-4 bits. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>Input unpacked type-2/3 bits. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="191" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/phy/interleave.c" bodystart="44" bodyend="48" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="191" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1aae3b85443865b00a3bf7c9d4940f08d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reorder_soft_bits</definition>
        <argsstring>(uint16_t outp[SYM_PER_PLD *2], const uint16_t inp[SYM_PER_PLD *2])</argsstring>
        <name>reorder_soft_bits</name>
        <param>
          <type>uint16_t</type>
          <declname>outp</declname>
          <array>[SYM_PER_PLD *2]</array>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>inp</declname>
          <array>[SYM_PER_PLD *2]</array>
        </param>
        <briefdescription>
<para>Reorder (interleave) 368 soft bits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outp</parametername>
</parameternamelist>
<parameterdescription>
<para>Reordered soft bits. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>Input soft bits. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="192" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/phy/interleave.c" bodystart="56" bodyend="60" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="192" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a703fd386d485c62dba458e6527dcbab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t q_abs_diff</definition>
        <argsstring>(uint16_t v1, uint16_t v2)</argsstring>
        <name>q_abs_diff</name>
        <param>
          <type>uint16_t</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
<para>Utility function returning the absolute value of a difference between two fixed-point values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v1</parametername>
</parameternamelist>
<parameterdescription>
<para>First value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>abs(v1-v2) value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="195" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/math.c" bodystart="25" bodyend="29" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="195" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a5597d1dc7d6fba3ae62adcc0cac1269a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eucl_norm</definition>
        <argsstring>(const float *in1, const int8_t *in2, uint8_t n)</argsstring>
        <name>eucl_norm</name>
        <param>
          <type>const float *</type>
          <declname>in1</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>in2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Calculate L2 norm between two n-dimensional vectors of floats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in1</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in2</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector 2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Vectors&apos; size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float L2 norm. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="196" column="7" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/math.c" bodystart="39" bodyend="49" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="196" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1acefe564b259f47d46331b59c707ad582" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void int_to_soft</definition>
        <argsstring>(uint16_t *out, uint16_t in, uint8_t len)</argsstring>
        <name>int_to_soft</name>
        <param>
          <type>uint16_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>in</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Convert an unsigned int into an array of soft, fixed-point values. </para>
        </briefdescription>
        <detaileddescription>
<para>Maximum length is 16. LSB is at index 0. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an array of uint16_t. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Input&apos;s bit length. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="197" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/math.c" bodystart="58" bodyend="64" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="197" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a22428cad16b07fa6f684803cdd536c56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t soft_to_int</definition>
        <argsstring>(const uint16_t *in, uint8_t len)</argsstring>
        <name>soft_to_int</name>
        <param>
          <type>const uint16_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Convert an array of soft, fixed-point Maximum length is 16. </para>
        </briefdescription>
        <detaileddescription>
<para>LSB is at index 0. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an array of uint16_t. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Input&apos;s length. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t Return value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="198" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/math.c" bodystart="73" bodyend="84" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="198" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1ada627b48ccf0d684b583142b701ba818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t div16</definition>
        <argsstring>(uint16_t a, uint16_t b)</argsstring>
        <name>div16</name>
        <param>
          <type>uint16_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>1st quadrant fixed point division with saturation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Dividend. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Divisor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t Quotient = a/b. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="199" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/math.c" bodystart="122" bodyend="128" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="199" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1aa720ba1f93c8b9a964c00982b2649c92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t mul16</definition>
        <argsstring>(uint16_t a, uint16_t b)</argsstring>
        <name>mul16</name>
        <param>
          <type>uint16_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>1st quadrant fixed point multiplication. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Multiplicand. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Multiplier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t Product = a*b. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="200" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/math.c" bodystart="137" bodyend="140" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="200" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a2030f3f98f4aa2ce0d6f9b50171e482d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t soft_bit_XOR</definition>
        <argsstring>(uint16_t a, uint16_t b)</argsstring>
        <name>soft_bit_XOR</name>
        <param>
          <type>uint16_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Bilinear interpolation (soft-valued expansion) for XOR. </para>
        </briefdescription>
        <detaileddescription>
<para>This approach retains XOR(0.5, 0.5)=0.5 <ulink url="https://math.stackexchange.com/questions/3505934/evaluation-of-not-and-xor-in-fuzzy-logic-rules">https://math.stackexchange.com/questions/3505934/evaluation-of-not-and-xor-in-fuzzy-logic-rules</ulink> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Input A. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Input B. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t Output = A xor B. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="201" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/math.c" bodystart="150" bodyend="155" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="201" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1aa38ccf665e97abc7b66643e4720b97e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t soft_bit_NOT</definition>
        <argsstring>(uint16_t a)</argsstring>
        <name>soft_bit_NOT</name>
        <param>
          <type>uint16_t</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Soft logic NOT. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Input A. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t Output = not A. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="202" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/math.c" bodystart="163" bodyend="166" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="202" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1ab2a44daae6eedd9bac699dead7d131b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void soft_XOR</definition>
        <argsstring>(uint16_t *out, const uint16_t *a, const uint16_t *b, uint8_t len)</argsstring>
        <name>soft_XOR</name>
        <param>
          <type>uint16_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>XOR for vectors of soft-valued logic. </para>
        </briefdescription>
        <detaileddescription>
<para>Max length is 255. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector = A xor B. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Input vector A. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Input vector B. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Vectors&apos; size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="203" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/math/math.c" bodystart="176" bodyend="180" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="203" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1abaa09b456b43d6527ff0b67558d90b59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void randomize_bits</definition>
        <argsstring>(uint8_t inp[SYM_PER_PLD *2])</argsstring>
        <name>randomize_bits</name>
        <param>
          <type>uint8_t</type>
          <declname>inp</declname>
          <array>[SYM_PER_PLD *2]</array>
        </param>
        <briefdescription>
<para>Randomize type-4 unpacked bits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>Input 368 unpacked type-4 bits. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="209" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/phy/randomize.c" bodystart="21" bodyend="33" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="209" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1ab8d1d50395c7fe663625b559e310854f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void randomize_soft_bits</definition>
        <argsstring>(uint16_t inp[SYM_PER_PLD *2])</argsstring>
        <name>randomize_soft_bits</name>
        <param>
          <type>uint16_t</type>
          <declname>inp</declname>
          <array>[SYM_PER_PLD *2]</array>
        </param>
        <briefdescription>
<para>Randomize type-4 soft bits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>Input 368 soft type-4 bits. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="210" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/phy/randomize.c" bodystart="40" bodyend="49" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="210" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1ab6b8755249e377c7780b969b06b2a20b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void slice_symbols</definition>
        <argsstring>(uint16_t out[2 *SYM_PER_PLD], const float inp[SYM_PER_PLD])</argsstring>
        <name>slice_symbols</name>
        <param>
          <type>uint16_t</type>
          <declname>out</declname>
          <array>[2 *SYM_PER_PLD]</array>
        </param>
        <param>
          <type>const float</type>
          <declname>inp</declname>
          <array>[SYM_PER_PLD]</array>
        </param>
        <briefdescription>
<para>Slice payload symbols into soft dibits. </para>
        </briefdescription>
        <detaileddescription>
<para>Input (RRC filtered baseband sampled at symbol centers) should be already normalized to {-3, -1, +1 +3}. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Soft valued dibits (type-4). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of 184 floats (1 sample per symbol). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="213" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/phy/slice.c" bodystart="18" bodyend="70" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="213" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a0780119c08d8b742fd440b880723d96f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t viterbi_decode</definition>
        <argsstring>(uint8_t *out, const uint16_t *in, uint16_t len)</argsstring>
        <name>viterbi_decode</name>
        <param>
          <type>uint8_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Decode unpunctured convolutionally encoded data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination array where decoded data is written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Input length in bits. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bit errors corrected. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="241" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/decode/viterbi.c" bodystart="55" bodyend="91" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="241" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a54c203201e35dbfe6d06b2e3561848f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t viterbi_decode_punctured</definition>
        <argsstring>(uint8_t *out, const uint16_t *in, const uint8_t *punct, uint16_t in_len, uint16_t p_len)</argsstring>
        <name>viterbi_decode_punctured</name>
        <param>
          <type>uint8_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>punct</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>in_len</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>p_len</declname>
        </param>
        <briefdescription>
<para>Decode punctured convolutionally encoded data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination array where decoded data is written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>punct</parametername>
</parameternamelist>
<parameterdescription>
<para>Puncturing matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Puncturing matrix length (entries). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bit errors corrected. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="242" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/decode/viterbi.c" bodystart="103" bodyend="137" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="242" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1ab45289f7f55640c99fd14eb37cb5d11a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void viterbi_decode_bit</definition>
        <argsstring>(uint16_t s0, uint16_t s1, size_t pos)</argsstring>
        <name>viterbi_decode_bit</name>
        <param>
          <type>uint16_t</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Decode one bit and update trellis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s0</parametername>
</parameternamelist>
<parameterdescription>
<para>Cost of the first symbol. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s1</parametername>
</parameternamelist>
<parameterdescription>
<para>Cost of the second symbol. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit position in history. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="243" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/decode/viterbi.c" bodystart="146" bodyend="204" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="243" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1adc1bf1f88e82f383caecac6806c43221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t viterbi_chainback</definition>
        <argsstring>(uint8_t *out, size_t pos, uint16_t len)</argsstring>
        <name>viterbi_chainback</name>
        <param>
          <type>uint8_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>History chainback to obtain final byte array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination byte array for decoded data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting position for the chainback. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the output in bits (minus K-1=4). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Minimum Viterbi cost at the end of the decode sequence. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="244" column="10" bodyfile="/home/haaken/github-projects/gr-m17/libm17/decode/viterbi.c" bodystart="214" bodyend="247" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="244" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a5fac74f726f03a8fd0bafaa705cdaeb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void viterbi_reset</definition>
        <argsstring>(void)</argsstring>
        <name>viterbi_reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset the decoder state. </para>
        </briefdescription>
        <detaileddescription>
<para>No args. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="245" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/decode/viterbi.c" bodystart="253" bodyend="264" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="245" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1ad7d7edb45f384e63c75a9a77244a04ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_ed25519_generate_keypair</definition>
        <argsstring>(uint8_t public_key[M17_ED25519_PUBLIC_KEY_SIZE], uint8_t private_key[M17_ED25519_PRIVATE_KEY_SIZE])</argsstring>
        <name>m17_ed25519_generate_keypair</name>
        <param>
          <type>uint8_t</type>
          <declname>public_key</declname>
          <array>[M17_ED25519_PUBLIC_KEY_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>private_key</declname>
          <array>[M17_ED25519_PRIVATE_KEY_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="253" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/ed25519.c" bodystart="28" bodyend="71" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="253" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1ad68df2cb051130ccdd205840df550a7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_ed25519_sign</definition>
        <argsstring>(const uint8_t *message, size_t message_len, const uint8_t private_key[M17_ED25519_PRIVATE_KEY_SIZE], uint8_t signature[M17_ED25519_SIGNATURE_SIZE])</argsstring>
        <name>m17_ed25519_sign</name>
        <param>
          <type>const uint8_t *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>message_len</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>private_key</declname>
          <array>[M17_ED25519_PRIVATE_KEY_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>signature</declname>
          <array>[M17_ED25519_SIGNATURE_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="254" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/ed25519.c" bodystart="103" bodyend="147" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="254" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a2e487bf4626df0515e9b1f64a78d2581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_ed25519_verify</definition>
        <argsstring>(const uint8_t *message, size_t message_len, const uint8_t signature[M17_ED25519_SIGNATURE_SIZE], const uint8_t public_key[M17_ED25519_PUBLIC_KEY_SIZE])</argsstring>
        <name>m17_ed25519_verify</name>
        <param>
          <type>const uint8_t *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>message_len</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>signature</declname>
          <array>[M17_ED25519_SIGNATURE_SIZE]</array>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>public_key</declname>
          <array>[M17_ED25519_PUBLIC_KEY_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="255" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/ed25519.c" bodystart="150" bodyend="193" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="255" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1afb273f3c6ec7397cfc9cd8f38c409b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_ed25519_public_key_from_private</definition>
        <argsstring>(const uint8_t private_key[M17_ED25519_PRIVATE_KEY_SIZE], uint8_t public_key[M17_ED25519_PUBLIC_KEY_SIZE])</argsstring>
        <name>m17_ed25519_public_key_from_private</name>
        <param>
          <type>const uint8_t</type>
          <declname>private_key</declname>
          <array>[M17_ED25519_PRIVATE_KEY_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>public_key</declname>
          <array>[M17_ED25519_PUBLIC_KEY_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="256" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/ed25519.c" bodystart="74" bodyend="100" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="256" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a0d4b921388b684d4bbb67b768e513345" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_curve25519_generate_keypair</definition>
        <argsstring>(uint8_t public_key[M17_CURVE25519_PUBLIC_KEY_SIZE], uint8_t private_key[M17_CURVE25519_PRIVATE_KEY_SIZE])</argsstring>
        <name>m17_curve25519_generate_keypair</name>
        <param>
          <type>uint8_t</type>
          <declname>public_key</declname>
          <array>[M17_CURVE25519_PUBLIC_KEY_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>private_key</declname>
          <array>[M17_CURVE25519_PRIVATE_KEY_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="263" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/curve25519.c" bodystart="25" bodyend="68" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="263" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1acd0e600656f7599eff9257410647a298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_curve25519_ecdh</definition>
        <argsstring>(const uint8_t private_key[M17_CURVE25519_PRIVATE_KEY_SIZE], const uint8_t peer_public_key[M17_CURVE25519_PUBLIC_KEY_SIZE], uint8_t shared_secret[M17_CURVE25519_SHARED_SECRET_SIZE])</argsstring>
        <name>m17_curve25519_ecdh</name>
        <param>
          <type>const uint8_t</type>
          <declname>private_key</declname>
          <array>[M17_CURVE25519_PRIVATE_KEY_SIZE]</array>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>peer_public_key</declname>
          <array>[M17_CURVE25519_PUBLIC_KEY_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>shared_secret</declname>
          <array>[M17_CURVE25519_SHARED_SECRET_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="264" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/curve25519.c" bodystart="100" bodyend="151" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="264" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a9f0216508832a981182af052d823b838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_curve25519_public_key_from_private</definition>
        <argsstring>(const uint8_t private_key[M17_CURVE25519_PRIVATE_KEY_SIZE], uint8_t public_key[M17_CURVE25519_PUBLIC_KEY_SIZE])</argsstring>
        <name>m17_curve25519_public_key_from_private</name>
        <param>
          <type>const uint8_t</type>
          <declname>private_key</declname>
          <array>[M17_CURVE25519_PRIVATE_KEY_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>public_key</declname>
          <array>[M17_CURVE25519_PUBLIC_KEY_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="265" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/curve25519.c" bodystart="71" bodyend="97" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="265" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a98ae69e3e4cbf33680a8a633428d3c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_hkdf_derive</definition>
        <argsstring>(const uint8_t *input_key_material, size_t ikm_len, const uint8_t *salt, size_t salt_len, const uint8_t *info, size_t info_len, uint8_t *output, size_t output_len)</argsstring>
        <name>m17_hkdf_derive</name>
        <param>
          <type>const uint8_t *</type>
          <declname>input_key_material</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ikm_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>salt_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>info_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>output_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="272" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/hkdf.c" bodystart="111" bodyend="135" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="272" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1a6b822da987cc251c9d855ef95fe0e395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_aes_gcm_encrypt</definition>
        <argsstring>(const uint8_t *plaintext, size_t plaintext_len, const uint8_t key[M17_AES_GCM_KEY_SIZE], const uint8_t iv[M17_AES_GCM_IV_SIZE], uint8_t *ciphertext, uint8_t tag[M17_AES_GCM_TAG_SIZE])</argsstring>
        <name>m17_aes_gcm_encrypt</name>
        <param>
          <type>const uint8_t *</type>
          <declname>plaintext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>plaintext_len</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>key</declname>
          <array>[M17_AES_GCM_KEY_SIZE]</array>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>iv</declname>
          <array>[M17_AES_GCM_IV_SIZE]</array>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>ciphertext</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tag</declname>
          <array>[M17_AES_GCM_TAG_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="279" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/aes_gcm.c" bodystart="44" bodyend="101" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="279" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="m17_8h_1ab4dbab700a540a53f39e213232fa76dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_aes_gcm_decrypt</definition>
        <argsstring>(const uint8_t *ciphertext, size_t ciphertext_len, const uint8_t key[M17_AES_GCM_KEY_SIZE], const uint8_t iv[M17_AES_GCM_IV_SIZE], const uint8_t tag[M17_AES_GCM_TAG_SIZE], uint8_t *plaintext)</argsstring>
        <name>m17_aes_gcm_decrypt</name>
        <param>
          <type>const uint8_t *</type>
          <declname>ciphertext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ciphertext_len</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>key</declname>
          <array>[M17_AES_GCM_KEY_SIZE]</array>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>iv</declname>
          <array>[M17_AES_GCM_IV_SIZE]</array>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>tag</declname>
          <array>[M17_AES_GCM_TAG_SIZE]</array>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>plaintext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h" line="280" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/aes_gcm.c" bodystart="104" bodyend="162" declfile="/home/haaken/github-projects/gr-m17/libm17/m17.h" declline="280" declcolumn="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>m17.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wojciech<sp/>Kaczmarski,<sp/>SP5WWP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>Foundation,<sp/>19<sp/>April<sp/>2025</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>secure<sp/>memory<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto/secure_memory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto/validation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto/key_derivation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto/replay_protection.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto/bounds_checking.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto/security_monitoring.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto/trustzone.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto/optee.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto/secure_boot.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;crypto/constant_time.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBM17_VERSION<sp/><sp/><sp/><sp/><sp/><sp/>&quot;1.0.9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>syncword,<sp/>payload,<sp/>and<sp/>frame<sp/>sizes<sp/>in<sp/>symbols</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYM_PER_SWD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//symbols<sp/>per<sp/>syncword</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYM_PER_PLD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>184<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//symbols<sp/>per<sp/>payload<sp/>in<sp/>a<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYM_PER_FRA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>192<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//symbols<sp/>per<sp/>whole<sp/>40<sp/>ms<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Link<sp/>Setup<sp/>Frame<sp/>TYPE<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_PACKET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_STREAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_VOICE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_NONE<sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_SCRAM<sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_AES<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2&lt;&lt;3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_ED25519<sp/><sp/><sp/>(3&lt;&lt;3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_CURVE25519<sp/><sp/><sp/><sp/>(4&lt;&lt;3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_SCRAM_8<sp/><sp/><sp/>(0&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_SCRAM_16<sp/><sp/>(1&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_SCRAM_24<sp/><sp/>(2&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_AES128<sp/><sp/><sp/><sp/>(0&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_AES192<sp/><sp/><sp/><sp/>(1&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_AES256<sp/><sp/><sp/><sp/>(2&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_ED25519_SIGN<sp/><sp/>(0&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_ED25519_VERIFY<sp/><sp/><sp/><sp/>(1&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_CURVE25519_ECDH<sp/><sp/><sp/>(0&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_ENCR_CURVE25519_DERIVE<sp/>(1&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_CAN(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x&lt;&lt;7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_UNSIGNED<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_SIGNED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>no<sp/>encryption<sp/>is<sp/>used,<sp/>the<sp/>Encryption<sp/>Subtype<sp/>field<sp/>describes<sp/>META<sp/>field<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_META_TEXT<sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;5)<sp/><sp/></highlight><highlight class="comment">//text<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_META_POSITION<sp/><sp/>(1&lt;&lt;5)<sp/><sp/></highlight><highlight class="comment">//GNSS<sp/>position<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_TYPE_META_EXT_CALL<sp/><sp/>(2&lt;&lt;5)<sp/><sp/></highlight><highlight class="comment">//Extended<sp/>Callsign<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LSF<sp/>META<sp/>position<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LSF<sp/>META<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_SOURCE_M17C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_SOURCE_OPENRTX<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_SOURCE_OTHER<sp/><sp/><sp/><sp/><sp/><sp/><sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_SOURCE_M17C<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LSF<sp/>META<sp/>station<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_STATION_FIXED<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_STATION_MOBILE<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_STATION_HANDHELD<sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LSF<sp/>META<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_LAT_NORTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_LAT_SOUTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_LON_EAST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_LON_WEST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_ALT_DATA_INVALID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_ALT_DATA_VALID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_SPD_BEARING_INVALID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_META_SPD_BEARING_VALID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>preamble</highlight></codeline>
<codeline lineno="89"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>PREAM_LSF,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>PREAM_BERT</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}<sp/>pream_t;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>frame<sp/>type</highlight></codeline>
<codeline lineno="99"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>FRAME_LSF,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>FRAME_STR,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>FRAME_PKT,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>FRAME_BERT</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/>frame_t;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>payload</highlight></codeline>
<codeline lineno="111" refid="structlsf__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dst[6];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>src[6];</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>type[2];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>meta[112/8];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>crc[2];</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}<sp/><ref refid="structlsf__t" kindref="compound">lsf_t</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>high<sp/>level<sp/>functions<sp/>-<sp/>m17.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gen_preamble(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>out[SYM_PER_FRA],<sp/>uint32_t*<sp/>cnt,<sp/>pream_t<sp/>type);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gen_preamble_i8(int8_t<sp/>out[SYM_PER_FRA],<sp/>uint32_t*<sp/>cnt,<sp/>pream_t<sp/>type);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gen_syncword(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>out[SYM_PER_SWD],<sp/>uint32_t*<sp/>cnt,<sp/>uint16_t<sp/>syncword);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gen_syncword_i8(int8_t<sp/>out[SYM_PER_SWD],<sp/>uint32_t*<sp/>cnt,<sp/>uint16_t<sp/>syncword);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gen_data(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>out[SYM_PER_PLD],<sp/>uint32_t*<sp/>cnt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>in);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gen_data_i8(int8_t<sp/>out[SYM_PER_PLD],<sp/>uint32_t*<sp/>cnt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>in);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gen_eot(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>out[SYM_PER_FRA],<sp/>uint32_t*<sp/>cnt);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gen_eot_i8(int8_t<sp/>out[SYM_PER_FRA],<sp/>uint32_t*<sp/>cnt);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gen_frame(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>out[SYM_PER_FRA],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>data,<sp/>frame_t<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlsf__t" kindref="compound">lsf_t</ref>*<sp/>lsf,<sp/>uint8_t<sp/>lich_cnt,<sp/>uint16_t<sp/>fn);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gen_frame_i8(int8_t<sp/>out[SYM_PER_FRA],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>data,<sp/>frame_t<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlsf__t" kindref="compound">lsf_t</ref>*<sp/>lsf,<sp/>uint8_t<sp/>lich_cnt,<sp/>uint16_t<sp/>fn);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">uint32_t<sp/>decode_LSF(<ref refid="structlsf__t" kindref="compound">lsf_t</ref>*<sp/>lsf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pld_symbs[SYM_PER_PLD]);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">uint32_t<sp/>decode_str_frame(uint8_t<sp/>frame_data[16],<sp/>uint8_t<sp/>lich[5],<sp/>uint16_t*<sp/>fn,<sp/>uint8_t*<sp/>lich_cnt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pld_symbs[SYM_PER_PLD]);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">uint32_t<sp/>decode_pkt_frame(uint8_t<sp/>frame_data[25],<sp/>uint8_t*<sp/>eof,<sp/>uint8_t*<sp/>fn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pld_symbs[SYM_PER_PLD]);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>encode/convol.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>puncture_pattern_1[61];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>puncture_pattern_2[12];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>puncture_pattern_3[8];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conv_encode_stream_frame(uint8_t*<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>in,<sp/>uint16_t<sp/>fn);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conv_encode_packet_frame(uint8_t<sp/>out[SYM_PER_PLD*2],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>in[26]);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conv_encode_LSF(uint8_t<sp/>out[SYM_PER_PLD*2],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlsf__t" kindref="compound">lsf_t</ref>*<sp/>in);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>conv_encode_bert_frame(uint8_t<sp/>out[SYM_PER_PLD*2],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>in[25]);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>payload/call.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHAR_MAP<sp/><sp/><sp/><sp/>&quot;<sp/>ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-/.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>U40_9<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(262144000000000ULL)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//40^9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>U40_9_8<sp/><sp/><sp/><sp/><sp/>(268697600000000ULL)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//40^9+40^8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decode_callsign_bytes(uint8_t<sp/>*outp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>inp[6]);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decode_callsign_value(uint8_t<sp/>*outp,<sp/>uint64_t<sp/>inp);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">int8_t<sp/>encode_callsign_bytes(uint8_t<sp/>out[6],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*inp);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">int8_t<sp/>encode_callsign_value(uint64_t<sp/>*out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*inp);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>payload/crc.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//M17<sp/>CRC<sp/>polynomial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>M17_CRC_POLY;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">uint16_t<sp/>CRC_M17(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>in,<sp/>uint16_t<sp/>len);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">uint16_t<sp/>LSF_CRC(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlsf__t" kindref="compound">lsf_t</ref>*<sp/>in);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>payload/lich.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>extract_LICH(uint8_t<sp/>outp[6],<sp/>uint8_t<sp/>cnt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlsf__t" kindref="compound">lsf_t</ref>*<sp/>inp);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unpack_LICH(uint8_t*<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>in[12]);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>payload/lsf.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_LSF_CRC(<ref refid="structlsf__t" kindref="compound">lsf_t</ref><sp/>*lsf);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_LSF(<ref refid="structlsf__t" kindref="compound">lsf_t</ref><sp/>*lsf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst,<sp/>uint16_t<sp/>type,<sp/>uint8_t<sp/>meta[14]);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_LSF_meta(<ref refid="structlsf__t" kindref="compound">lsf_t</ref><sp/>*lsf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>meta[14]);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_LSF_meta_position(<ref refid="structlsf__t" kindref="compound">lsf_t</ref><sp/>*lsf,<sp/>uint8_t<sp/>data_source,<sp/>uint8_t<sp/>station_type,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lat,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lon,<sp/>uint8_t<sp/>flags,<sp/>int32_t<sp/>altitude,<sp/>uint16_t<sp/>bearing,<sp/>uint8_t<sp/>speed);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_LSF_meta_ecd(<ref refid="structlsf__t" kindref="compound">lsf_t</ref><sp/>*lsf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cf2);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_LSF_meta_nonce(<ref refid="structlsf__t" kindref="compound">lsf_t</ref><sp/>*lsf,<sp/>time_t<sp/>ts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>rand[10]);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">int8_t<sp/>get_LSF_meta_position(uint8_t<sp/>*data_source,<sp/>uint8_t<sp/>*station_type,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*lat,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*lon,<sp/>uint8_t<sp/>*flags,<sp/>int32_t<sp/>*altitude,<sp/>uint16_t<sp/>*bearing,<sp/>uint8_t<sp/>*speed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlsf__t" kindref="compound">lsf_t</ref><sp/>*lsf);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>math/golay.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>encode_matrix[12];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>decode_matrix[12];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">uint32_t<sp/>golay24_encode(uint16_t<sp/>data);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">uint16_t<sp/>golay24_sdecode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>codeword[24]);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decode_LICH(uint8_t<sp/>outp[6],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>inp[96]);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>encode_LICH(uint8_t<sp/>outp[12],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>inp[6]);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>phy/interleave.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//interleaver<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>intrl_seq[SYM_PER_PLD*2];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reorder_bits(uint8_t<sp/>outp[SYM_PER_PLD*2],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>inp[SYM_PER_PLD*2]);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reorder_soft_bits(uint16_t<sp/>outp[SYM_PER_PLD*2],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>inp[SYM_PER_PLD*2]);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>math/math.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">uint16_t<sp/>q_abs_diff(uint16_t<sp/>v1,<sp/>uint16_t<sp/>v2);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>eucl_norm(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>in1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t*<sp/>in2,<sp/>uint8_t<sp/>n);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>int_to_soft(uint16_t*<sp/>out,<sp/>uint16_t<sp/>in,<sp/>uint8_t<sp/>len);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">uint16_t<sp/>soft_to_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>in,<sp/>uint8_t<sp/>len);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">uint16_t<sp/>div16(uint16_t<sp/>a,<sp/>uint16_t<sp/>b);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">uint16_t<sp/>mul16(uint16_t<sp/>a,<sp/>uint16_t<sp/>b);</highlight></codeline>
<codeline lineno="201"><highlight class="normal">uint16_t<sp/>soft_bit_XOR(uint16_t<sp/>a,<sp/>uint16_t<sp/>b);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">uint16_t<sp/>soft_bit_NOT(uint16_t<sp/>a);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>soft_XOR(uint16_t*<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>b,<sp/>uint8_t<sp/>len);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>phy/randomize.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//randomizing<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>rand_seq[46];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>randomize_bits(uint8_t<sp/>inp[SYM_PER_PLD*2]);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>randomize_soft_bits(uint16_t<sp/>inp[SYM_PER_PLD*2]);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>phy/slice.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>slice_symbols(uint16_t<sp/>out[2*SYM_PER_PLD],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inp[SYM_PER_PLD]);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>math/rrc.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//sample<sp/>RRC<sp/>filter<sp/>for<sp/>48kHz<sp/>sample<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//alpha=0.5,<sp/>span=8,<sp/>sps=10,<sp/>gain=sqrt(sps)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rrc_taps_10[8*10+1];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//sample<sp/>RRC<sp/>filter<sp/>for<sp/>24kHz<sp/>sample<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//alpha=0.5,<sp/>span=8,<sp/>sps=5,<sp/>gain=sqrt(sps)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rrc_taps_5[8*5+1];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>encode/symbols.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dibits-symbols<sp/>map<sp/>(TX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>symbol_map[4];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>symbol_list[4];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>phy/sync.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//syncwords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>SYNC_LSF;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>SYNC_STR;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>SYNC_PKT;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>SYNC_BER;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>EOT_MRKR;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>decode/viterbi.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_CONVOL_K<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//constraint<sp/>length<sp/>K=5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_CONVOL_STATES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>(M17_CONVOL_K<sp/>-<sp/>1))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//number<sp/>of<sp/>states<sp/>of<sp/>the<sp/>convolutional<sp/>encoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">uint32_t<sp/>viterbi_decode(uint8_t*<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>in,<sp/>uint16_t<sp/>len);</highlight></codeline>
<codeline lineno="242"><highlight class="normal">uint32_t<sp/>viterbi_decode_punctured(uint8_t*<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>punct,<sp/>uint16_t<sp/>in_len,<sp/>uint16_t<sp/>p_len);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>viterbi_decode_bit(uint16_t<sp/>s0,<sp/>uint16_t<sp/>s1,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="244"><highlight class="normal">uint32_t<sp/>viterbi_chainback(uint8_t*<sp/>out,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos,<sp/>uint16_t<sp/>len);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>viterbi_reset(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>crypto/ed25519.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_ED25519_PUBLIC_KEY_SIZE<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_ED25519_PRIVATE_KEY_SIZE<sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_ED25519_SIGNATURE_SIZE<sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_ED25519_SEED_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_ed25519_generate_keypair(uint8_t<sp/>public_key[M17_ED25519_PUBLIC_KEY_SIZE],<sp/>uint8_t<sp/>private_key[M17_ED25519_PRIVATE_KEY_SIZE]);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_ed25519_sign(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>message,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>message_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>private_key[M17_ED25519_PRIVATE_KEY_SIZE],<sp/>uint8_t<sp/>signature[M17_ED25519_SIGNATURE_SIZE]);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_ed25519_verify(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>message,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>message_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>signature[M17_ED25519_SIGNATURE_SIZE],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>public_key[M17_ED25519_PUBLIC_KEY_SIZE]);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_ed25519_public_key_from_private(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>private_key[M17_ED25519_PRIVATE_KEY_SIZE],<sp/>uint8_t<sp/>public_key[M17_ED25519_PUBLIC_KEY_SIZE]);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>crypto/curve25519.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_CURVE25519_PUBLIC_KEY_SIZE<sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_CURVE25519_PRIVATE_KEY_SIZE<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_CURVE25519_SHARED_SECRET_SIZE<sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_curve25519_generate_keypair(uint8_t<sp/>public_key[M17_CURVE25519_PUBLIC_KEY_SIZE],<sp/>uint8_t<sp/>private_key[M17_CURVE25519_PRIVATE_KEY_SIZE]);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_curve25519_ecdh(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>private_key[M17_CURVE25519_PRIVATE_KEY_SIZE],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>peer_public_key[M17_CURVE25519_PUBLIC_KEY_SIZE],<sp/>uint8_t<sp/>shared_secret[M17_CURVE25519_SHARED_SECRET_SIZE]);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_curve25519_public_key_from_private(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>private_key[M17_CURVE25519_PRIVATE_KEY_SIZE],<sp/>uint8_t<sp/>public_key[M17_CURVE25519_PUBLIC_KEY_SIZE]);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>crypto/hkdf.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_HKDF_MAX_OUTPUT_SIZE<sp/><sp/><sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_HKDF_SALT_SIZE<sp/><sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_HKDF_INFO_SIZE<sp/><sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_hkdf_derive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>input_key_material,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ikm_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>salt,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>salt_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>info,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>info_len,<sp/>uint8_t*<sp/>output,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>output_len);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>crypto/aes_gcm.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_AES_GCM_KEY_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_AES_GCM_IV_SIZE<sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_AES_GCM_TAG_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_aes_gcm_encrypt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>plaintext,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>plaintext_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>key[M17_AES_GCM_KEY_SIZE],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>iv[M17_AES_GCM_IV_SIZE],<sp/>uint8_t*<sp/>ciphertext,<sp/>uint8_t<sp/>tag[M17_AES_GCM_TAG_SIZE]);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_aes_gcm_decrypt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>ciphertext,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ciphertext_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>key[M17_AES_GCM_KEY_SIZE],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>iv[M17_AES_GCM_IV_SIZE],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>tag[M17_AES_GCM_TAG_SIZE],<sp/>uint8_t*<sp/>plaintext);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//End<sp/>of<sp/>Transmission<sp/>symbol<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>eot_symbols[8];</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>decode/symbols.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>syncword<sp/>patterns<sp/>(RX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Compute<sp/>those<sp/>at<sp/>runtime<sp/>from<sp/>the<sp/>consts<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>lsf_sync_symbols[8];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>str_sync_symbols[8];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t<sp/>pkt_sync_symbols[8];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/haaken/github-projects/gr-m17/libm17/m17.h"/>
  </compounddef>
</doxygen>
