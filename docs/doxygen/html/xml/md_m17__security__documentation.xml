<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="md_m17__security__documentation" kind="page">
    <compoundname>md_m17__security__documentation</compoundname>
    <title>M17 Security Documentation</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><heading level="1">üîí Security Overview</heading>
</para>
<para>The M17 Digital Voice Protocol implementation includes comprehensive security features designed for amateur radio use with professional-grade cryptographic protection.</para>
<para><heading level="1">üõ°Ô∏è Security Features</heading>
</para>
<para><heading level="2">Cryptographic Security</heading>
</para>
<para><heading level="3">Digital Signatures</heading>
</para>
<para><itemizedlist>
<listitem><para><bold>Ed25519</bold>: Modern elliptic curve digital signatures for extended mode</para>
</listitem><listitem><para><bold>P-256 ECDSA</bold>: M17 specification compliant signatures for strict mode</para>
</listitem><listitem><para><bold>Signature Verification</bold>: Constant-time operations resistant to side-channel attacks</para>
</listitem><listitem><para><bold>Key Management</bold>: Hardware security module integration for private key storage</para>
</listitem></itemizedlist>
</para>
<para><heading level="3">Key Agreement</heading>
</para>
<para><itemizedlist>
<listitem><para><bold>Curve25519 ECDH</bold>: Secure key exchange for encrypted channels</para>
</listitem><listitem><para><bold>P-256 ECDH</bold>: M17 specification compliant key agreement</para>
</listitem><listitem><para><bold>Forward Secrecy</bold>: Each session uses unique key pairs</para>
</listitem><listitem><para><bold>Key Derivation</bold>: HKDF for secure key derivation from shared secrets</para>
</listitem></itemizedlist>
</para>
<para><heading level="3">Encryption</heading>
</para>
<para><itemizedlist>
<listitem><para><bold>AES-256-GCM</bold>: Authenticated encryption for extended mode</para>
</listitem><listitem><para><bold>AES-256-CTR</bold>: M17 specification compliant encryption for strict mode</para>
</listitem><listitem><para><bold>IV Generation</bold>: Cryptographically secure random IVs</para>
</listitem><listitem><para><bold>Key Rotation</bold>: Automatic key rotation for long-term security</para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Memory Security</heading>
</para>
<para><heading level="3">Secure Memory Clearing</heading>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>SECURITY:<sp/>Always<sp/>use<sp/>explicit_bzero<sp/>for<sp/>sensitive<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">explicit_bzero(sensitive_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sensitive_data));</highlight></codeline>
</programlisting></para>
<para><heading level="3">Bounds Checking</heading>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>SECURITY:<sp/>Always<sp/>validate<sp/>array<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>array_size)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>array[index]<sp/>=<sp/>value;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><heading level="3">Input Validation</heading>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>SECURITY:<sp/>Always<sp/>validate<sp/>input<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key_length<sp/>!=<sp/>32)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>key<sp/>length&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><heading level="2">Hardware Security</heading>
</para>
<para><heading level="3">Nitrokey Integration</heading>
</para>
<para><itemizedlist>
<listitem><para><bold>Hardware Security Module</bold>: Secure key storage and operations</para>
</listitem><listitem><para><bold>PIN Protection</bold>: Multi-factor authentication</para>
</listitem><listitem><para><bold>Tamper Resistance</bold>: Hardware-based security</para>
</listitem><listitem><para><bold>Key Isolation</bold>: Keys never leave the hardware module</para>
</listitem></itemizedlist>
</para>
<para><heading level="3">TrustZone Support</heading>
</para>
<para><itemizedlist>
<listitem><para><bold>Secure World</bold>: Isolated execution environment</para>
</listitem><listitem><para><bold>Secure Boot</bold>: Verified boot process</para>
</listitem><listitem><para><bold>Attestation</bold>: Hardware-based security verification</para>
</listitem></itemizedlist>
</para>
<para><heading level="1">‚ö†Ô∏è Security Warnings</heading>
</para>
<para><heading level="2">Critical Security Requirements</heading>
</para>
<para><heading level="3">Never Log Sensitive Data</heading>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>‚ùå<sp/>NEVER<sp/>DO<sp/>THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">printf(</highlight><highlight class="stringliteral">&quot;Key:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>key_hex);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>‚úÖ<sp/>DO<sp/>THIS<sp/>INSTEAD</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">printf(</highlight><highlight class="stringliteral">&quot;Key:<sp/>[HIDDEN]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><heading level="3">Always Use Secure Memory Clearing</heading>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>‚ùå<sp/>NEVER<sp/>DO<sp/>THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">memset(sensitive_data,<sp/>0,<sp/>size);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>‚úÖ<sp/>DO<sp/>THIS<sp/>INSTEAD</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">explicit_bzero(sensitive_data,<sp/>size);</highlight></codeline>
</programlisting></para>
<para><heading level="3">Validate All Cryptographic Operations</heading>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>‚ùå<sp/>NEVER<sp/>DO<sp/>THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">EVP_DigestInit_ex(ctx,<sp/>EVP_sha256(),<sp/>NULL);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>‚úÖ<sp/>DO<sp/>THIS<sp/>INSTEAD</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(EVP_DigestInit_ex(ctx,<sp/>EVP_sha256(),<sp/>NULL)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><heading level="2">Security Best Practices</heading>
</para>
<para><heading level="3">Key Management</heading>
</para>
<para><orderedlist>
<listitem><para><bold>Store private keys in hardware security modules</bold></para>
</listitem><listitem><para><bold>Use secure key derivation functions</bold></para>
</listitem><listitem><para><bold>Implement proper key rotation</bold></para>
</listitem><listitem><para><bold>Clear sensitive memory after use</bold></para>
</listitem></orderedlist>
</para>
<para><heading level="3">Authentication</heading>
</para>
<para><orderedlist>
<listitem><para><bold>Use digital signatures for message authentication</bold></para>
</listitem><listitem><para><bold>Implement challenge-response protocols</bold></para>
</listitem><listitem><para><bold>Validate timestamps and nonces</bold></para>
</listitem><listitem><para><bold>Protect against replay attacks</bold></para>
</listitem></orderedlist>
</para>
<para><heading level="3">Encryption</heading>
</para>
<para><orderedlist>
<listitem><para><bold>Use authenticated encryption (AES-GCM)</bold></para>
</listitem><listitem><para><bold>Generate random IVs for each message</bold></para>
</listitem><listitem><para><bold>Use secure key agreement (ECDH)</bold></para>
</listitem><listitem><para><bold>Implement proper key derivation</bold></para>
</listitem></orderedlist>
</para>
<para><heading level="1">üîß Compatibility Modes</heading>
</para>
<para><heading level="2">M17 Strict Mode (Default)</heading>
</para>
<para><bold>Purpose</bold>: Full M17 specification compliance</para>
<para><bold>Features</bold>:<itemizedlist>
<listitem><para>P-256 ECDSA for digital signatures</para>
</listitem><listitem><para>AES-256-CTR for encryption</para>
</listitem><listitem><para>Standard LSF/META field usage</para>
</listitem><listitem><para>Compatible with all M17 implementations</para>
</listitem></itemizedlist>
</para>
<para><bold>Usage</bold>: <programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Enable<sp/>strict<sp/>mode<sp/>(default)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">decoder.set_m17_strict_mode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><bold>Security Level</bold>: ‚úÖ <bold>M17 Spec Compliant</bold></para>
<para><heading level="2">Extended Mode (Nitrokey)</heading>
</para>
<para><bold>Purpose</bold>: Enhanced features with hardware security</para>
<para><bold>Features</bold>:<itemizedlist>
<listitem><para>Ed25519 digital signatures</para>
</listitem><listitem><para>Curve25519 ECDH key agreement</para>
</listitem><listitem><para>AES-256-GCM authenticated encryption</para>
</listitem><listitem><para>Nitrokey HSM integration</para>
</listitem><listitem><para>Challenge-response authentication</para>
</listitem></itemizedlist>
</para>
<para><bold>Usage</bold>: <programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Enable<sp/>extended<sp/>mode<sp/>(requires<sp/>coordination)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">decoder.set_m17_strict_mode(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">decoder.set_extended_crypto(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><bold>Security Level</bold>: ‚ö†Ô∏è <bold>NOT M17 Spec Compliant</bold></para>
<para><heading level="1">üìö Usage Examples</heading>
</para>
<para><heading level="2">Basic Usage (Strict Mode)</heading>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Create<sp/>decoder<sp/>with<sp/>default<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">m17_decoder_impl<sp/>decoder(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="comment">//<sp/>debug_data</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="comment">//<sp/>debug_ctrl</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>0.9,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>callsign<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="comment">//<sp/>signed_str</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENCR_NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>key<sp/>(set<sp/>later)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seed<sp/>(set<sp/>later)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>encryption<sp/>key<sp/>(32<sp/>bytes<sp/>=<sp/>64<sp/>hex<sp/>characters)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">decoder.set_key(</highlight><highlight class="stringliteral">&quot;0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enable<sp/>strict<sp/>M17<sp/>mode<sp/>(default)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">decoder.set_m17_strict_mode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><heading level="2">Extended Mode Usage</heading>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Enable<sp/>extended<sp/>crypto<sp/>mode<sp/>(requires<sp/>Nitrokey)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">decoder.set_extended_crypto(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>Ed25519<sp/>keys<sp/>for<sp/>digital<sp/>signatures</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>ed25519_pub[32],<sp/>ed25519_priv[32];</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...<sp/>load<sp/>keys<sp/>from<sp/>secure<sp/>storage<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">decoder.set_ed25519_keys(ed25519_pub,<sp/>32,<sp/>ed25519_priv,<sp/>32);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>Curve25519<sp/>keys<sp/>for<sp/>ECDH</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>curve25519_pub[32],<sp/>curve25519_priv[32];</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...<sp/>load<sp/>keys<sp/>from<sp/>secure<sp/>storage<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">decoder.set_curve25519_keys(curve25519_pub,<sp/>32,<sp/>curve25519_priv,<sp/>32);</highlight></codeline>
</programlisting></para>
<para><heading level="2">Nitrokey Integration</heading>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Initialize<sp/>Nitrokey<sp/>hardware<sp/>security<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decoder.init_nitrokey_security(</highlight><highlight class="stringliteral">&quot;123456&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Nitrokey<sp/>initialized<sp/>successfully\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>hardware-backed<sp/>cryptography</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>signature[64];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>decoder.sign_with_hardware(data,<sp/>len,<sp/>signature,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>ECDH<sp/>with<sp/>hardware</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>shared_secret[32];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>decoder.ecdh_with_hardware(peer_pubkey,<sp/>shared_secret,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Nitrokey<sp/>initialization<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><heading level="1">üîç Security Audit</heading>
</para>
<para><heading level="2">Security Checklist</heading>
</para>
<para><heading level="3">‚úÖ Implemented Security Features</heading>
</para>
<para><itemizedlist>
<listitem><para>[x] Secure memory clearing with <computeroutput>explicit_bzero</computeroutput></para>
</listitem><listitem><para>[x] Cryptographically secure random number generation</para>
</listitem><listitem><para>[x] Input validation for all parameters</para>
</listitem><listitem><para>[x] Bounds checking for all array operations</para>
</listitem><listitem><para>[x] Error handling for all cryptographic operations</para>
</listitem><listitem><para>[x] Hardware security module integration</para>
</listitem><listitem><para>[x] Digital signature verification</para>
</listitem><listitem><para>[x] Secure key derivation</para>
</listitem><listitem><para>[x] Replay protection</para>
</listitem><listitem><para>[x] Memory protection</para>
</listitem></itemizedlist>
</para>
<para><heading level="3">‚ö†Ô∏è Security Considerations</heading>
</para>
<para><itemizedlist>
<listitem><para>[ ] Regular security audits</para>
</listitem><listitem><para>[ ] Penetration testing</para>
</listitem><listitem><para>[ ] Code review for security issues</para>
</listitem><listitem><para>[ ] Threat modeling</para>
</listitem><listitem><para>[ ] Security training for developers</para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Security Metrics</heading>
</para>
<para><table rows="7" cols="3"><row>
<entry thead="yes"><para>Security Feature   </para>
</entry><entry thead="yes"><para>Status   </para>
</entry><entry thead="yes"><para>Implementation    </para>
</entry></row>
<row>
<entry thead="no"><para><bold>Memory Security</bold>   </para>
</entry><entry thead="no"><para>‚úÖ Complete   </para>
</entry><entry thead="no"><para>explicit_bzero, bounds checking    </para>
</entry></row>
<row>
<entry thead="no"><para><bold>Cryptographic Security</bold>   </para>
</entry><entry thead="no"><para>‚úÖ Complete   </para>
</entry><entry thead="no"><para>Ed25519, Curve25519, AES-GCM    </para>
</entry></row>
<row>
<entry thead="no"><para><bold>Hardware Security</bold>   </para>
</entry><entry thead="no"><para>‚úÖ Complete   </para>
</entry><entry thead="no"><para>Nitrokey HSM integration    </para>
</entry></row>
<row>
<entry thead="no"><para><bold>Key Management</bold>   </para>
</entry><entry thead="no"><para>‚úÖ Complete   </para>
</entry><entry thead="no"><para>Secure key storage and rotation    </para>
</entry></row>
<row>
<entry thead="no"><para><bold>Authentication</bold>   </para>
</entry><entry thead="no"><para>‚úÖ Complete   </para>
</entry><entry thead="no"><para>Digital signatures, challenge-response    </para>
</entry></row>
<row>
<entry thead="no"><para><bold>Encryption</bold>   </para>
</entry><entry thead="no"><para>‚úÖ Complete   </para>
</entry><entry thead="no"><para>AES-GCM, AES-CTR with secure IVs   </para>
</entry></row>
</table>
</para>
<para><heading level="1">üìû Security Support</heading>
</para>
<para><heading level="2">Reporting Security Issues</heading>
</para>
<para><bold>Email</bold>: <ulink url="mailto:security@m17-project.org">security@m17-project.org</ulink> <linebreak/>
 <bold>Response Time</bold>: 24 hours for critical issues <linebreak/>
 <bold>PGP Key</bold>: Available on project website</para>
<para><heading level="2">Security Team</heading>
</para>
<para><bold>Lead</bold>: M17 Security Team <linebreak/>
 <bold>Reviewers</bold>: Cryptographic experts <linebreak/>
 <bold>Auditors</bold>: External security auditors</para>
<para><hruler/>
</para>
<para><bold>Last Updated</bold>:  <linebreak/>
 <bold>Version</bold>: 1.0 <linebreak/>
 <bold>Status</bold>: ‚úÖ <bold>SECURE</bold> </para>
    </detaileddescription>
    <location file="m17_security_documentation.md"/>
  </compounddef>
</doxygen>
