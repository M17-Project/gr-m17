<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="m17__simd_8h" kind="file" language="C++">
    <compoundname>m17_simd.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includedby refid="m17__simd_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/m17_simd.c</includedby>
    <includedby refid="math_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/math/math.c</includedby>
    <includedby refid="slice_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/phy/slice.c</includedby>
    <includedby refid="test__improvements_8c" local="no">/home/haaken/github-projects/gr-m17/libm17/test_improvements.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/haaken/github-projects/gr-m17/libm17/m17_simd.h</label>
        <link refid="m17__simd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="m17__simd_8h_1ab7801b6618f632c16a48c56c1aa35b70" prot="public" static="no" strong="no">
        <type></type>
        <name>m17_simd_capabilities_t</name>
        <enumvalue id="m17__simd_8h_1ab7801b6618f632c16a48c56c1aa35b70ab703747ef9dc810e180799efa2c207cf" prot="public">
          <name>M17_SIMD_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__simd_8h_1ab7801b6618f632c16a48c56c1aa35b70a08a591f20168418d6817dfa143cdc9c4" prot="public">
          <name>M17_SIMD_SSE2</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__simd_8h_1ab7801b6618f632c16a48c56c1aa35b70a1761eee55f0fd09267070f15de3c4175" prot="public">
          <name>M17_SIMD_SSE3</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__simd_8h_1ab7801b6618f632c16a48c56c1aa35b70aead4a714ccab73df6f2804eccb47826f" prot="public">
          <name>M17_SIMD_SSSE3</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__simd_8h_1ab7801b6618f632c16a48c56c1aa35b70ab8a4bcec450652d201cfde1faf68551c" prot="public">
          <name>M17_SIMD_SSE4_1</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__simd_8h_1ab7801b6618f632c16a48c56c1aa35b70a15be2b5ae27bc701b1505b43d030b4ca" prot="public">
          <name>M17_SIMD_SSE4_2</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__simd_8h_1ab7801b6618f632c16a48c56c1aa35b70af8a1a16c87737d346b3469f2a7a41621" prot="public">
          <name>M17_SIMD_AVX</name>
          <initializer>= 32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__simd_8h_1ab7801b6618f632c16a48c56c1aa35b70abb99023bdeae47257874682992534c15" prot="public">
          <name>M17_SIMD_AVX2</name>
          <initializer>= 64</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="m17__simd_8h_1ab7801b6618f632c16a48c56c1aa35b70af8202b66dd9ce3f09f6ce9b907fe98ef" prot="public">
          <name>M17_SIMD_NEON</name>
          <initializer>= 128</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" line="19" column="1" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" bodystart="19" bodyend="29"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="m17__simd_8h_1aa59759c85dac0637633bd0b0dddb0750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>m17_simd_capabilities_t</type>
        <definition>m17_simd_capabilities_t m17_get_simd_capabilities</definition>
        <argsstring>(void)</argsstring>
        <name>m17_get_simd_capabilities</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" line="32" column="25" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.c" bodystart="14" bodyend="48" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" declline="32" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="m17__simd_8h_1a4941e042da3dd54eceb1a38607d4e8b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_simd_euclidean_norm</definition>
        <argsstring>(const float *in1, const int8_t *in2, float *result, size_t n)</argsstring>
        <name>m17_simd_euclidean_norm</name>
        <param>
          <type>const float *</type>
          <declname>in1</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>in2</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" line="35" column="6" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" declline="35" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17__simd_8h_1ae9a030d249531d815938f1d7e8be2d62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_simd_symbol_slice</definition>
        <argsstring>(const float *input, uint16_t *output, size_t n)</argsstring>
        <name>m17_simd_symbol_slice</name>
        <param>
          <type>const float *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" line="36" column="6" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" declline="36" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17__simd_8h_1afbe56ad3bd5020cfbdf5bf973fda0de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_simd_soft_xor</definition>
        <argsstring>(const uint16_t *a, const uint16_t *b, uint16_t *out, size_t len)</argsstring>
        <name>m17_simd_soft_xor</name>
        <param>
          <type>const uint16_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" line="37" column="6" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" declline="37" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17__simd_8h_1a902c1c886da3de656fa144bae1f9a692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_simd_soft_add</definition>
        <argsstring>(const uint16_t *a, const uint16_t *b, uint16_t *out, size_t len)</argsstring>
        <name>m17_simd_soft_add</name>
        <param>
          <type>const uint16_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" line="38" column="6" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" declline="38" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17__simd_8h_1a1dc1a3ef51697567238b4546b3c10f26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_simd_viterbi_metrics</definition>
        <argsstring>(const uint16_t *s0, const uint16_t *s1, uint32_t *metrics, size_t n)</argsstring>
        <name>m17_simd_viterbi_metrics</name>
        <param>
          <type>const uint16_t *</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>metrics</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" line="39" column="6" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" declline="39" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17__simd_8h_1aa83f76f984f2982ac6562145dcb4c30f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_scalar_euclidean_norm</definition>
        <argsstring>(const float *in1, const int8_t *in2, float *result, size_t n)</argsstring>
        <name>m17_scalar_euclidean_norm</name>
        <param>
          <type>const float *</type>
          <declname>in1</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>in2</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" line="42" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.c" bodystart="51" bodyend="59" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17__simd_8h_1af5940fee6e6b5d6905822255796bbe23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_scalar_symbol_slice</definition>
        <argsstring>(const float *input, uint16_t *output, size_t n)</argsstring>
        <name>m17_scalar_symbol_slice</name>
        <param>
          <type>const float *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" line="43" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.c" bodystart="61" bodyend="74" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" declline="43" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17__simd_8h_1a2e8e568cc73fe5691e898179a2184bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_scalar_soft_xor</definition>
        <argsstring>(const uint16_t *a, const uint16_t *b, uint16_t *out, size_t len)</argsstring>
        <name>m17_scalar_soft_xor</name>
        <param>
          <type>const uint16_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" line="44" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.c" bodystart="76" bodyend="91" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="m17__simd_8h_1aa226d24a26c67d4bef01252f83a6a389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_scalar_soft_add</definition>
        <argsstring>(const uint16_t *a, const uint16_t *b, uint16_t *out, size_t len)</argsstring>
        <name>m17_scalar_soft_add</name>
        <param>
          <type>const uint16_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" line="45" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.c" bodystart="93" bodyend="99" declfile="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h" declline="45" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>m17_simd.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SIMD<sp/>optimizations<sp/>for<sp/>M17<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wojciech<sp/>Kaczmarski,<sp/>SP5WWP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>Foundation,<sp/>12<sp/>March<sp/>2025</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SIMD<sp/>detection<sp/>and<sp/>capabilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_SIMD_NONE<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_SIMD_SSE2<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_SIMD_SSE3<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_SIMD_SSSE3<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_SIMD_SSE4_1<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_SIMD_SSE4_2<sp/>=<sp/>16,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_SIMD_AVX<sp/>=<sp/>32,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_SIMD_AVX2<sp/>=<sp/>64,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>M17_SIMD_NEON<sp/>=<sp/>128</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}<sp/>m17_simd_capabilities_t;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>available<sp/>SIMD<sp/>capabilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">m17_simd_capabilities_t<sp/>m17_get_simd_capabilities(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SIMD-optimized<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_simd_euclidean_norm(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>in1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t*<sp/>in2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>result,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_simd_symbol_slice(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>input,<sp/>uint16_t*<sp/>output,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_simd_soft_xor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>b,<sp/>uint16_t*<sp/>out,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_simd_soft_add(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>b,<sp/>uint16_t*<sp/>out,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_simd_viterbi_metrics(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>s0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>s1,<sp/>uint32_t*<sp/>metrics,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fallback<sp/>implementations<sp/>(always<sp/>available)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_scalar_euclidean_norm(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>in1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int8_t*<sp/>in2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>result,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_scalar_symbol_slice(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>input,<sp/>uint16_t*<sp/>output,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_scalar_soft_xor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>b,<sp/>uint16_t*<sp/>out,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_scalar_soft_add(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t*<sp/>b,<sp/>uint16_t*<sp/>out,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/haaken/github-projects/gr-m17/libm17/m17_simd.h"/>
  </compounddef>
</doxygen>
