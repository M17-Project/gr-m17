<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="constant__time_8h" kind="file" language="C++">
    <compoundname>constant_time.h</compoundname>
    <includes refid="m17_8h" local="yes">m17.h</includes>
    <includes local="no">stddef.h</includes>
    <includedby refid="m17_8h" local="yes">/home/haaken/github-projects/gr-m17/libm17/m17.h</includedby>
    <incdepgraph>
      <node id="13">
        <label>crypto/bounds_checking.h</label>
        <link refid="bounds__checking_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h</label>
        <link refid="constant__time_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>crypto/key_derivation.h</label>
        <link refid="key__derivation_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>crypto/optee.h</label>
        <link refid="optee_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>crypto/replay_protection.h</label>
        <link refid="replay__protection_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>crypto/secure_boot.h</label>
        <link refid="secure__boot_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>crypto/secure_memory.h</label>
        <link refid="secure__memory_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>crypto/security_monitoring.h</label>
        <link refid="security__monitoring_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>crypto/trustzone.h</label>
        <link refid="trustzone_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>crypto/validation.h</label>
        <link refid="validation_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>m17.h</label>
        <link refid="m17_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="10">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="6">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/haaken/github-projects/gr-m17/lib/m17_coder_impl.h</label>
        <link refid="m17__coder__impl_8h_source"/>
      </node>
      <node id="4">
        <label>/home/haaken/github-projects/gr-m17/lib/m17_decoder_impl.h</label>
        <link refid="m17__decoder__impl_8h_source"/>
      </node>
      <node id="1">
        <label>/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h</label>
        <link refid="constant__time_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/haaken/github-projects/gr-m17/libm17/m17.h</label>
        <link refid="m17_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="constant__time_8h_1a1675eecfd033f99110eb7227a21732d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_constant_time_memcmp</definition>
        <argsstring>(const void *a, const void *b, size_t len)</argsstring>
        <name>m17_constant_time_memcmp</name>
        <param>
          <type>const void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" line="24" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.c" bodystart="19" bodyend="34" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" declline="24" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="constant__time_8h_1aa3b4ff9f24a58eccb1c12a99bc81fa11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_constant_time_memcpy</definition>
        <argsstring>(void *dest, const void *src, size_t len)</argsstring>
        <name>m17_constant_time_memcpy</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" line="28" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.c" bodystart="38" bodyend="50" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="constant__time_8h_1a21894677485c22482788eeb63ca0855a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_constant_time_memzero</definition>
        <argsstring>(void *ptr, size_t len)</argsstring>
        <name>m17_constant_time_memzero</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" line="32" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.c" bodystart="54" bodyend="65" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" declline="32" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="constant__time_8h_1a036d1771c9104063d0d0c53e7df022d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_constant_time_conditional_copy</definition>
        <argsstring>(void *dest, const void *src, size_t len, int condition)</argsstring>
        <name>m17_constant_time_conditional_copy</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" line="36" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.c" bodystart="69" bodyend="83" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" declline="36" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="constant__time_8h_1a0a1d19ab81f1dee83bbf2ea57a8eefeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_constant_time_conditional_zero</definition>
        <argsstring>(void *ptr, size_t len, int condition)</argsstring>
        <name>m17_constant_time_conditional_zero</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" line="40" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.c" bodystart="87" bodyend="100" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" declline="40" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="constant__time_8h_1ab257b566f1bacbb2c56ba03f27a81c50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_constant_time_select</definition>
        <argsstring>(void *dest, const void *a, const void *b, size_t len, int condition)</argsstring>
        <name>m17_constant_time_select</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" line="44" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.c" bodystart="104" bodyend="119" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="constant__time_8h_1a1bf365a1b938a2810ce19cbbebed2b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_constant_time_intcmp</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>m17_constant_time_intcmp</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" line="48" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.c" bodystart="123" bodyend="126" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" declline="48" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="constant__time_8h_1ae0d67e695d169d9360dae5e134564708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_constant_time_intselect</definition>
        <argsstring>(int a, int b, int condition)</argsstring>
        <name>m17_constant_time_intselect</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" line="52" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.c" bodystart="130" bodyend="134" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" declline="52" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="constant__time_8h_1a65bbb9de4775ef17ebff69e2eaed5e23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_constant_time_array_equal</definition>
        <argsstring>(const void *a, const void *b, size_t len)</argsstring>
        <name>m17_constant_time_array_equal</name>
        <param>
          <type>const void *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" line="56" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.c" bodystart="138" bodyend="154" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" declline="56" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="constant__time_8h_1a8504bae49842765b7e625a91e057bf2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_constant_time_array_copy</definition>
        <argsstring>(void *dest, const void *src, size_t len, int condition)</argsstring>
        <name>m17_constant_time_array_copy</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" line="60" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.c" bodystart="158" bodyend="172" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" declline="60" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="constant__time_8h_1a4bfd424bbf79735ed66d49639ad63bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void m17_constant_time_array_zero</definition>
        <argsstring>(void *ptr, size_t len, int condition)</argsstring>
        <name>m17_constant_time_array_zero</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" line="64" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.c" bodystart="176" bodyend="189" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h" declline="64" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>crypto/constant_time.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constant-time<sp/>cryptographic<sp/>operations<sp/>for<sp/>M17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prevents<sp/>timing<sp/>attacks<sp/>and<sp/>side-channel<sp/>vulnerabilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SECURITY<sp/>FIX:<sp/>Implements<sp/>proper<sp/>constant-time<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wojciech<sp/>Kaczmarski,<sp/>SP5WWP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>Foundation,<sp/>19<sp/>April<sp/>2025</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>M17_CONSTANT_TIME_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_CONSTANT_TIME_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;m17.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SECURITY<sp/>FIX:<sp/>Constant-time<sp/>memory<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prevents<sp/>timing<sp/>attacks<sp/>on<sp/>authentication<sp/>tags<sp/>and<sp/>signatures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_constant_time_memcmp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*b,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SECURITY<sp/>FIX:<sp/>Constant-time<sp/>memory<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ensures<sp/>sensitive<sp/>data<sp/>is<sp/>copied<sp/>without<sp/>timing<sp/>leaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_constant_time_memcpy(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SECURITY<sp/>FIX:<sp/>Constant-time<sp/>memory<sp/>zeroing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ensures<sp/>sensitive<sp/>data<sp/>is<sp/>cleared<sp/>without<sp/>timing<sp/>leaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_constant_time_memzero(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SECURITY<sp/>FIX:<sp/>Constant-time<sp/>conditional<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copies<sp/>data<sp/>only<sp/>if<sp/>condition<sp/>is<sp/>true,<sp/>without<sp/>timing<sp/>leaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_constant_time_conditional_copy(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SECURITY<sp/>FIX:<sp/>Constant-time<sp/>conditional<sp/>zeroing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Zeros<sp/>data<sp/>only<sp/>if<sp/>condition<sp/>is<sp/>true,<sp/>without<sp/>timing<sp/>leaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_constant_time_conditional_zero(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SECURITY<sp/>FIX:<sp/>Constant-time<sp/>array<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Selects<sp/>array<sp/>element<sp/>without<sp/>timing<sp/>leaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_constant_time_select(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*b,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SECURITY<sp/>FIX:<sp/>Constant-time<sp/>integer<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compares<sp/>integers<sp/>without<sp/>timing<sp/>leaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_constant_time_intcmp(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SECURITY<sp/>FIX:<sp/>Constant-time<sp/>integer<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Selects<sp/>integer<sp/>without<sp/>timing<sp/>leaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_constant_time_intselect(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SECURITY<sp/>FIX:<sp/>Constant-time<sp/>array<sp/>equality<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Checks<sp/>if<sp/>arrays<sp/>are<sp/>equal<sp/>without<sp/>timing<sp/>leaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_constant_time_array_equal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*b,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SECURITY<sp/>FIX:<sp/>Constant-time<sp/>array<sp/>copy<sp/>with<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copies<sp/>array<sp/>only<sp/>if<sp/>condition<sp/>is<sp/>true,<sp/>without<sp/>timing<sp/>leaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_constant_time_array_copy(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SECURITY<sp/>FIX:<sp/>Constant-time<sp/>array<sp/>zeroing<sp/>with<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Zeros<sp/>array<sp/>only<sp/>if<sp/>condition<sp/>is<sp/>true,<sp/>without<sp/>timing<sp/>leaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>m17_constant_time_array_zero(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>M17_CONSTANT_TIME_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h"/>
  </compounddef>
</doxygen>
