<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="bounds__checking_8h" kind="file" language="C++">
    <compoundname>bounds_checking.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includedby refid="m17_8h" local="yes">/home/haaken/github-projects/gr-m17/libm17/m17.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h</label>
        <link refid="bounds__checking_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/haaken/github-projects/gr-m17/lib/m17_coder_impl.h</label>
        <link refid="m17__coder__impl_8h_source"/>
      </node>
      <node id="4">
        <label>/home/haaken/github-projects/gr-m17/lib/m17_decoder_impl.h</label>
        <link refid="m17__decoder__impl_8h_source"/>
      </node>
      <node id="1">
        <label>/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h</label>
        <link refid="bounds__checking_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/haaken/github-projects/gr-m17/libm17/crypto/constant_time.h</label>
        <link refid="constant__time_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/haaken/github-projects/gr-m17/libm17/m17.h</label>
        <link refid="m17_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="bounds__checking_8h_1a4244072673b7e22f50030f588f076590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_safe_memcpy</definition>
        <argsstring>(void *dest, size_t dest_size, const void *src, size_t src_size)</argsstring>
        <name>m17_safe_memcpy</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dest_size</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>src_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="23" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/m17_safe.c" bodystart="18" bodyend="34" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="23" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bounds__checking_8h_1a2f152a43802c6849cae5f1356a834e37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_safe_memmove</definition>
        <argsstring>(void *dest, size_t dest_size, const void *src, size_t src_size)</argsstring>
        <name>m17_safe_memmove</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dest_size</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>src_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="27" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.c" bodystart="21" bodyend="37" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="27" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bounds__checking_8h_1a7952ec1a9150482f233db38a3aa9c201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_safe_strcpy</definition>
        <argsstring>(char *dest, size_t dest_size, const char *src)</argsstring>
        <name>m17_safe_strcpy</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dest_size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="31" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.c" bodystart="40" bodyend="56" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="31" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bounds__checking_8h_1a6df8ac51ff00cf5bed94f1750f652b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_safe_strcat</definition>
        <argsstring>(char *dest, size_t dest_size, const char *src)</argsstring>
        <name>m17_safe_strcat</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dest_size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="34" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.c" bodystart="59" bodyend="77" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="34" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bounds__checking_8h_1a95e40bc866cdd157af6d3be21de4e776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_safe_utf8_parse</definition>
        <argsstring>(const char *input, size_t input_len, uint8_t *output, size_t output_size, size_t *bytes_written)</argsstring>
        <name>m17_safe_utf8_parse</name>
        <param>
          <type>const char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>input_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>bytes_written</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="37" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.c" bodystart="80" bodyend="118" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="37" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bounds__checking_8h_1a2d4fdd80a80925dd4b666c1745e42697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool m17_validate_buffer_bounds</definition>
        <argsstring>(const void *ptr, size_t size, size_t offset, size_t length)</argsstring>
        <name>m17_validate_buffer_bounds</name>
        <param>
          <type>const void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="42" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/validation.c" bodystart="51" bodyend="69" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bounds__checking_8h_1a972f58652a79481f16c0f26cf7b6c251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int m17_safe_array_access</definition>
        <argsstring>(const void *array, size_t element_size, size_t array_length, size_t index, void *element)</argsstring>
        <name>m17_safe_array_access</name>
        <param>
          <type>const void *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>element_size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>array_length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="46" column="5" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.c" bodystart="123" bodyend="142" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="46" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bounds__checking_8h_1a44914787a5e7e44ae02ba433ab836ae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * m17_safe_pointer_add</definition>
        <argsstring>(const void *ptr, size_t offset, size_t max_size)</argsstring>
        <name>m17_safe_pointer_add</name>
        <param>
          <type>const void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="51" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.c" bodystart="145" bodyend="155" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="51" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bounds__checking_8h_1ae71f5847978b18d5d863a537c3ad5e68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * m17_safe_malloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>m17_safe_malloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="54" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.c" bodystart="158" bodyend="175" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="54" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bounds__checking_8h_1acf72d15f34201a18a2c3865df9815e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * m17_safe_realloc</definition>
        <argsstring>(void *ptr, size_t new_size)</argsstring>
        <name>m17_safe_realloc</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="57" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.c" bodystart="178" bodyend="198" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bounds__checking_8h_1a84a1fc2085dfc6967fe8bc3609bbb80c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool m17_safe_add</definition>
        <argsstring>(size_t a, size_t b, size_t *result)</argsstring>
        <name>m17_safe_add</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="60" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.c" bodystart="201" bodyend="212" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="60" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bounds__checking_8h_1a58b37c7b70207ce80babaaec76591ad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool m17_safe_multiply</definition>
        <argsstring>(size_t a, size_t b, size_t *result)</argsstring>
        <name>m17_safe_multiply</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="61" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.c" bodystart="214" bodyend="230" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="61" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bounds__checking_8h_1add546e1391aa31bec64e0f39ffbc3a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool m17_validate_string_bounds</definition>
        <argsstring>(const char *str, size_t max_length)</argsstring>
        <name>m17_validate_string_bounds</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="64" column="6" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.c" bodystart="233" bodyend="240" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="64" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bounds__checking_8h_1a7cd3b5ae404bb9a5c61c0c4a2586c194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t m17_safe_strlen</definition>
        <argsstring>(const char *str, size_t max_length)</argsstring>
        <name>m17_safe_strlen</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" line="67" column="8" bodyfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.c" bodystart="243" bodyend="254" declfile="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h" declline="67" declcolumn="8"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>C<sp/>library<sp/>-<sp/>crypto/bounds_checking.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Buffer<sp/>overflow<sp/>protection<sp/>and<sp/>bounds<sp/>checking<sp/>utilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implements<sp/>safe<sp/>memory<sp/>operations<sp/>and<sp/>bounds<sp/>validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wojciech<sp/>Kaczmarski,<sp/>SP5WWP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M17<sp/>Foundation,<sp/>19<sp/>April<sp/>2025</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>M17_BOUNDS_CHECKING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M17_BOUNDS_CHECKING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>memory<sp/>copy<sp/>with<sp/>bounds<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_safe_memcpy(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dest_size,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>src_size);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>memory<sp/>move<sp/>with<sp/>bounds<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_safe_memmove(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dest_size,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>src_size);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>string<sp/>copy<sp/>with<sp/>bounds<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_safe_strcpy(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dest_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>string<sp/>concatenation<sp/>with<sp/>bounds<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_safe_strcat(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dest_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>UTF-8<sp/>string<sp/>parsing<sp/>with<sp/>bounds<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_safe_utf8_parse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*input,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>input_len,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*output,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>output_size,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*bytes_written);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>buffer<sp/>bounds<sp/>validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m17_validate_buffer_bounds(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>array<sp/>access<sp/>with<sp/>bounds<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m17_safe_array_access(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*array,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>element_size,<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>array_length,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*element);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>pointer<sp/>arithmetic<sp/>with<sp/>bounds<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>m17_safe_pointer_add(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_size);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>memory<sp/>allocation<sp/>with<sp/>bounds<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>m17_safe_malloc(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>memory<sp/>reallocation<sp/>with<sp/>bounds<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>m17_safe_realloc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_size);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>integer<sp/>operations<sp/>with<sp/>overflow<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m17_safe_add(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*result);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m17_safe_multiply(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*result);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Validate<sp/>string<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m17_validate_string_bounds(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_length);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Safe<sp/>string<sp/>length<sp/>with<sp/>bounds<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m17_safe_strlen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_length);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>M17_BOUNDS_CHECKING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/haaken/github-projects/gr-m17/libm17/crypto/bounds_checking.h"/>
  </compounddef>
</doxygen>
