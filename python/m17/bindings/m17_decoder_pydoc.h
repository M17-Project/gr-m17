/*
 * m17_decoder_pydoc.h
 * 
 * GNU Radio M17 Module - Python Documentation Headers
 * 
 * This file contains Python documentation strings for the M17 decoder block.
 * It's automatically generated by the docstring extraction system.
 */

#ifndef INCLUDED_M17_DECODER_PYDOC_H
#define INCLUDED_M17_DECODER_PYDOC_H

// Define the D() macro for docstring access
// The D() macro can take one or two arguments
#define D(...) D_HELPER(__VA_ARGS__, D_TWO, D_ONE)(__VA_ARGS__)
#define D_HELPER(a, b, c, ...) c
#define D_ONE(class_name) __doc_##class_name
#define D_TWO(class_name, method_name) __doc_##class_name##_##method_name

// Python docstrings for M17 decoder block
static const char* __doc_m17_decoder = R"doc(
M17 Decoder Block

This block decodes M17 digital radio frames.

Args:
    debug_data (bool): Enable debug data output
    debug_ctrl (bool): Enable debug control output
    threshold (float): Decoding threshold
    callsign (bool): Enable callsign processing
    signed_str (bool): Enable signed string processing
    encr_type (int): Encryption type
    key (str): Decryption key
    seed (str): Seed for random number generation

Returns:
    M17 decoded frames
)doc";

// Additional docstrings for methods - these match the D() macro usage
static const char* __doc_m17_decoder_make = R"doc(Create M17 decoder block)doc";
static const char* __doc_m17_decoder_set_debug_data = R"doc(Set debug data mode)doc";
static const char* __doc_m17_decoder_set_debug_ctrl = R"doc(Set debug control mode)doc";
static const char* __doc_m17_decoder_set_callsign = R"doc(Set callsign processing)doc";
static const char* __doc_m17_decoder_set_threshold = R"doc(Set decoding threshold)doc";
static const char* __doc_m17_decoder_set_signed = R"doc(Set signed mode)doc";
static const char* __doc_m17_decoder_set_key = R"doc(Set decryption key)doc";
static const char* __doc_m17_decoder_set_seed = R"doc(Set seed)doc";
static const char* __doc_m17_decoder_parse_raw_key_string = R"doc(Parse raw key string)doc";
static const char* __doc_m17_decoder_scrambler_sequence_generator = R"doc(Scrambler sequence generator)doc";
static const char* __doc_m17_decoder_scrambler_seed_calculation = R"doc(Scrambler seed calculation)doc";

#endif // INCLUDED_M17_DECODER_PYDOC_H
